{"version":3,"sources":["assets/img/walletconnect.png","assets/img/metamask.png","assets/img/trustwallet.png","components/ConnectButton.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ConnectButton","props","state","WalletConnectSelectionDlgOpen","connected","networkWarning","baseState","componentDidMount","existingConnectionJSON","localStorage","getItem","existingConnection","JSON","parse","initialConnect_WalletConnect","window","ethereum","initialConnect","componentWillUnmount","a","chainId","chainIdExpected","setState","walletConnectProvider","WalletConnectProvider","infuraId","rpc","enable","web3","Web3","eth","getAccounts","accounts","length","walletAddress","handleConnectWallet_WalletConnect","console","log","request","method","then","res","handleConnectWallet","confirm","document","createElement","target","href","click","networkVersion","updateRefLink","forceUpdate","farm_contract","Contract","contract_abi","contractAddress","handleDeactivateAccount","handleDeactivateAccount_WalletConnect","disconnect","setItem","refLinkWalledId","getElementById","innerText","handleWalletConnectDlgSelection","selection","handleWalletConnectDlgClose","onClick_connect","onClick_disconnect","render","button","Button","fullWidth","variant","color","sx","my","marginRight","size","onClick","style","height","walletConnectPreSelectDlg","Dialog","onClose","open","List","p","ListItem","autoFocus","ListItemAvatar","src","metamaskLogo","width","ListItemText","primaryTypographyProps","fontSize","primary","trustwalletLogo","walletConnectLogo","Box","Grid","container","item","xs","md","padding","slice","React","Component","styled","Paper","theme","typography","h3","spacing","textAlign","palette","text","secondary","dataRefreshInterval","App","radioValue","progress","walletAccepted","LPApeswap","LPPancakeswap","PPPBalanceBUSD","ApeswapLPToSpend","PancakeLPToSpend","Apeswap_BUSD_Total","Apeswap_PSTN_Total","Pancake_BUSD_Total","Pancake_PSTN_Total","_stateInterval","abi","checkState","clearInterval","setInterval","yourAddress","methods","getApePairBalance","call","result","utils","fromWei","getPcsPairBalance","getPPPBUSDBalance","parseFloat","getApePairAmounts","amountBUSD","amountPSTN","getPcsPairAmounts","onClick_FeedPPPApeswap","lpToSpendInWei","toWei","busdToSpend","toFixed","feedPPP_Apeswap","send","from","response","alert","catch","err","onClick_FeedPPPPancakeswap","feedPPP_Pancakeswap","handleRadioChange","event","_value","className","display","CircularProgress","marginTop","id","onChange","evt","value","type","background","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","darkTheme","createTheme","mode","main","default","ReactDOM","StrictMode","ThemeProvider"],"mappings":"8xJAAe,MAA0B,0CCA1B,MAA0B,qCCA1B,MAA0B,wC,OCmV1BA,E,kDAjTb,WAAYC,GAA4B,IAAD,8BACnC,cAAMA,IAPVC,MAAQ,CACNC,+BAA+B,EAC/BC,WAAW,EACXC,eAAgB,IAGqB,EADvCC,eACuC,IAKvCC,kBAAoB,WAIhB,IACE,IAAIC,EAAyBC,aAAaC,QAAQ,iBAElD,GAAGF,EAAuB,CACxB,IAAIG,GAAqB,EACzB,IAEEA,EADWC,KAAKC,MAAML,GACIJ,SAG3B,CAFA,SACCO,GAAqB,CACtB,CACEA,GACD,EAAKG,8BAER,MACIC,OAAOC,UACR,EAAKC,gBAKV,CAFA,SAEA,CACJ,EA/BsC,EAiCvCC,qBAAuB,WAEtB,EAnCsC,EA0CvCJ,6BA1CuC,sBA0CR,4BAAAK,EAAA,2DAE1BJ,OAAOK,QAAU,GAAKL,OAAOM,iBAAmBN,OAAOK,SAF7B,uBAG3B,EAAKE,SAAS,CAACjB,eAAe,WAAD,OAAaU,OAAOK,QAApB,qBAHF,0BAM3B,EAAKE,SAAS,CAACjB,eAAe,KANH,cAU7BU,OAAOQ,sBAAwB,IAAIC,IAAsB,CACvDC,SAAU,mCACVL,QAASL,OAAOM,gBAChBK,IAAK,CACH,GAAI,iDACJ,GAAI,uCAfqB,mBA6BrBX,OAAOQ,sBAAsBI,SA7BR,eA+B3BZ,OAAOa,KAAO,IAAIC,IAAKd,OAAOQ,uBA/BH,UAiCJR,OAAOa,KAAKE,IAAIC,cAjCZ,SAiCrBC,EAjCqB,QAkCfC,OAAS,IACnBlB,OAAOX,WAAY,EACnB,EAAKkB,SAAS,CAAClB,WAAW,IAC1BW,OAAOmB,cAAgBF,EAAS,GAChC,EAAKG,qCAtCoB,kDAyC3BC,QAAQC,IAAI,0BAzCe,0DA1CQ,EAwFvCpB,eAAiB,WACf,GAAIF,OAAOC,SAAU,CAEnB,GAAGD,OAAOK,QAAU,GAAKL,OAAOM,iBAAmBN,OAAOK,QAExD,YADA,EAAKE,SAAS,CAACjB,eAAe,WAAD,OAAaU,OAAOK,QAApB,qBAG7B,EAAKE,SAAS,CAACjB,eAAe,KAGhCU,OAAOC,SACJsB,QAAQ,CAAEC,OAAQ,wBAClBC,MAAK,SAACC,GACDA,EAAIR,QAAU,IAChBlB,OAAOX,WAAY,EACnB,EAAKkB,SAAS,CAAClB,WAAW,IAC1BW,OAAOmB,cAAgBO,EAAI,GAC3B,EAAKC,sBAER,GACJ,MAAM,GACL3B,OAAO4B,QACL,wIAEF,CACA,IAAIxB,EAAIyB,SAASC,cAAc,KAC/B1B,EAAE2B,OAAS,SACX3B,EAAE4B,KAAO,+BACT5B,EAAE6B,OACH,CACF,EAtHsC,EAwHvCN,oBAAsB,WAEjB3B,OAAOC,WACRD,OAAOa,KAAO,IAAIC,IAAKd,OAAOC,UAE9BD,OAAOK,QAAUL,OAAOC,SAASiC,eAC9BlC,OAAOK,QAAU,GAAKL,OAAOM,iBAAmBN,OAAOK,QACxD,EAAKE,SAAS,CAACjB,eAAe,WAAD,OAAaU,OAAOK,QAApB,qBAE7B,EAAKE,SAAS,CAACjB,eAAe,KAGhCU,OAAOC,SAASsB,QAAQ,CAAEC,OAAQ,iBAAkBC,MAAK,SAACC,GACpDA,EAAIR,QAAU,IAChBlB,OAAOX,WAAY,EACnB,EAAKkB,SAAS,CAAClB,WAAW,IAC1BW,OAAOmB,cAAgBO,EAAI,GAC3B,EAAKS,gBAEL,EAAKC,cAELpC,OAAOqC,cAAiB,IAAIrC,OAAOa,KAAKE,IAAIuB,SAAStC,OAAOuC,aAAcvC,OAAOwC,iBAEpF,IAGJ,EAlJsC,EAoJvCpB,kCApJuC,sBAoJH,4BAAAhB,EAAA,0DAE/BJ,OAAOQ,sBAFwB,uBAIhCR,OAAOK,QAAUL,OAAOQ,sBAAsBH,QAC3CL,OAAOK,QAAU,GAAKL,OAAOM,iBAAmBN,OAAOK,QACxD,EAAKE,SAAS,CAACjB,eAAe,WAAD,OAAaU,OAAOK,QAApB,qBAE7B,EAAKE,SAAS,CAACjB,eAAe,KARA,SAWTU,OAAOa,KAAKE,IAAIC,cAXP,QAW1BC,EAX0B,QAYpBC,OAAS,IACnBlB,OAAOX,WAAY,EACnB,EAAKkB,SAAS,CAAClB,WAAW,IAC1BW,OAAOmB,cAAgBF,EAAS,GAChC,EAAKkB,gBACL,EAAKC,cAELpC,OAAOqC,cAAiB,IAAIrC,OAAOa,KAAKE,IAAIuB,SAAStC,OAAOuC,aAAcvC,OAAOwC,kBAnBnD,2CApJG,EA6KvCC,wBAA0B,WACxBzC,OAAOX,WAAY,EACnBW,OAAOmB,cAAgB,GACvB,EAAKZ,SAAS,CAACjB,eAAe,KAC9B,EAAKiB,SAAS,CAAClB,WAAW,IAC1B,EAAK+C,aACN,EAnLsC,EAqLvCM,sCAAwC,WACtC1C,OAAOQ,sBAAsBmC,aAC7B3C,OAAOX,WAAY,EACnBW,OAAOmB,cAAgB,GACvBnB,OAAOK,QAAU,EACjBX,aAAakD,QAAQ,gBAAiB,IACtC,EAAKrC,SAAS,CAACjB,eAAe,KAC9B,EAAKiB,SAAS,CAAClB,WAAW,IAC1B,EAAK+C,aACN,EA9LsC,EAgMvCD,cAAgB,WACd,IAAIU,EAAkBhB,SAASiB,eAAe,wBACxB,MAAnBD,IACDA,EAAgBE,UAAY/C,OAAOmB,cAEtC,EArMsC,EAuMvC6B,gCAAkC,SAACC,GAKjC,OAJA,EAAK1C,SAAS,CACZnB,+BAA+B,IAG1B6D,GACL,IAAK,WACL,IAAK,cACH,EAAK/C,iBACP,MAEA,IAAK,gBACH,EAAKH,+BAGV,EAtNsC,EAwNvCmD,4BAA8B,WAC5B,EAAK3C,SAAS,CACZnB,+BAA+B,GAElC,EA5NsC,EA8NvC+D,gBAAkB,WAEhB,EAAK5C,SAAS,CACZnB,+BAA+B,GAIlC,EArOsC,EAuOvCgE,mBAAqB,WACnB,IACE,EAAKV,uCAGN,CAFA,SAEA,CAED,IACE,EAAKD,yBAGN,CAFA,SAEA,CACF,EAnPsC,EAqPvCY,OAAS,WAEP,IAAIC,EAEFA,EADE,EAAKnE,MAAME,UACJ,eAACkE,EAAA,EAAD,CAAQC,WAAW,EAAMC,QAAS,YAAaC,MAAO,YAAaC,GAAI,CAACC,GAAI,EAAGC,YAAa,GAAKC,KAAK,QAAQC,QAAS,EAAKX,mBAA5H,UAAgJ,cAAC,IAAD,CAAcY,MAAO,CAACC,OAAQ,OAAQJ,YAAa,SAAnM,gBAEA,eAACN,EAAA,EAAD,CAAQC,WAAW,EAAMC,QAAS,YAAaC,MAAO,UAAWC,GAAI,CAACC,GAAI,EAAGC,YAAa,GAAKC,KAAK,QAAQC,QAAS,EAAKZ,gBAA1H,UAA2I,cAAC,IAAD,CAAWa,MAAO,CAACC,OAAQ,OAAQJ,YAAa,SAA3L,aAGX,IAAIK,EAA+B,cAACC,EAAA,EAAD,CAAQC,QAAS,EAAKlB,4BAA6BmB,KAAM,EAAKlF,MAAMC,8BAApE,SACjC,eAACkF,EAAA,EAAD,CAAMX,GAAI,CAAEY,EAAG,QAAf,UACE,eAACC,EAAA,EAAD,CAAUC,WAAS,EAACnB,QAAM,EAACS,QAAS,kBAAM,EAAKf,gCAAgC,WAA3C,EAApC,UACE,cAAC0B,EAAA,EAAD,UACI,qBAAKC,IAAKC,EAAcZ,MAAO,CAACa,MAAO,YAE3C,cAACC,EAAA,EAAD,CAAcC,uBAAwB,CAACC,SAAU,QAASC,QAAQ,gBAEpE,eAACT,EAAA,EAAD,CAAUC,WAAS,EAACnB,QAAM,EAACS,QAAS,kBAAM,EAAKf,gCAAgC,cAA3C,EAApC,UACI,cAAC0B,EAAA,EAAD,UACE,qBAAKC,IAAKO,EAAiBlB,MAAO,CAACa,MAAO,YAE9C,cAACC,EAAA,EAAD,CAAcC,uBAAwB,CAACC,SAAU,QAASC,QAAQ,oBAEpE,eAACT,EAAA,EAAD,CAAUC,WAAS,EAACnB,QAAM,EAACS,QAAS,kBAAM,EAAKf,gCAAgC,gBAA3C,EAApC,UACI,cAAC0B,EAAA,EAAD,UACE,qBAAKC,IAAKQ,EAAmBnB,MAAO,CAACa,MAAO,YAEhD,cAACC,EAAA,EAAD,CAAcC,uBAAwB,CAACC,SAAU,QAASC,QAAQ,0BAKxE,OACE,eAACG,EAAA,EAAD,WACG,EAAKjG,MAAMG,eACZ,eAAC+F,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACGnC,IAGH,cAAC+B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACE,qBAAKzB,MAAO,CAAC0B,QAAS,QAAtB,SACG,EAAKvG,MAAME,WAAaW,OAAOmB,eAA/B,UACInB,OAAOmB,cAAcwE,MAAM,EAAG,GADlC,cAC0C3F,OAAOmB,cAAcwE,MAC5D3F,OAAOmB,cAAcD,OAAS,EAC9BlB,OAAOmB,cAAcD,gBAQ9BgD,IAIN,EA5SG,EAAK3E,UAAY,EAAKJ,MAFa,CAGtC,C,6DAkCD,SAA0BD,GAGzB,K,GAhDyB0G,IAAMC,WCIlC7F,OAAOM,gBAAkB,GA0BZwF,YAAOC,IAAPD,EAAc,gBAAGE,EAAH,EAAGA,MAAH,mBAAC,eACvBA,EAAMC,WAAWC,IADK,IAEzBR,QAASM,EAAMG,QAAQ,GACvBC,UAAW,SACX1C,MAAOsC,EAAMK,QAAQC,KAAKC,WAJD,IAO3BvG,OAAOwG,oBAAsB,I,IAoOdC,E,kDA7Mb,WAAYvH,GAAkB,IAAD,8BAC3B,cAAMA,IApBRC,MAAQ,CACNuH,WAAY,GACZC,UAAU,EACVC,gBAAgB,EAChBC,UAAW,EACXC,cAAe,EACfC,eAAgB,EAChBC,iBAAkB,EAClBC,iBAAkB,EAElBC,mBAAoB,EACpBC,mBAAoB,EACpBC,mBAAoB,EACpBC,mBAAoB,GAMO,EAH7B9H,eAG6B,IAF7B+H,oBAE6B,IAU7B9H,kBAAoB,WAClBQ,OAAOwC,gBAtEqB,6CAuE5BxC,OAAOuC,aAAegF,EAGtB,EAAKC,aAEF,EAAKF,gBACNG,cAAc,EAAKH,gBAErB,EAAKA,eAAiBI,YAAY,EAAKF,WAAYxH,OAAOwG,oBAG3D,EAvB4B,EA0B7BrG,qBAAuB,WAEtB,EA5B4B,EA+B7BqH,WAAa,YAEa,IAArBxH,OAAOX,WAKV,EAAKkB,SAAS,CACZoH,YAAa3H,OAAOmB,gBAItBnB,OAAOqC,cAAcuF,QAAQC,kBAAkB7H,OAAOwC,iBAAiBsF,OAAOrG,MAAK,SAACsG,GAElF,EAAKxH,SAAS,CACZsG,UAAW/F,IAAKkH,MAAMC,QAAQF,IAEjC,IAED/H,OAAOqC,cAAcuF,QAAQM,kBAAkBlI,OAAOwC,iBAAiBsF,OAAOrG,MAAK,SAACsG,GAElF,EAAKxH,SAAS,CACZuG,cAAehG,IAAKkH,MAAMC,QAAQF,IAErC,IAED/H,OAAOqC,cAAcuF,QAAQO,oBAAoBL,OAAOrG,MAAK,SAACsG,GAE5D,EAAKxH,SAAS,CACZwG,eAAgBqB,WAAWtH,IAAKkH,MAAMC,QAAQF,KAEjD,IAED/H,OAAOqC,cAAcuF,QAAQS,kBAAkBrI,OAAOwC,iBAAiBsF,OAAOrG,MAAK,SAACsG,GAElF,EAAKxH,SAAS,CACZ2G,mBAAoBkB,WAAWtH,IAAKkH,MAAMC,QAAQF,EAAOO,aACzDnB,mBAAoBiB,WAAWtH,IAAKkH,MAAMC,QAAQF,EAAOQ,cAE5D,IAEDvI,OAAOqC,cAAcuF,QAAQY,kBAAkBxI,OAAOwC,iBAAiBsF,OAAOrG,MAAK,SAACsG,GAElF,EAAKxH,SAAS,CACZ6G,mBAAoBgB,WAAWtH,IAAKkH,MAAMC,QAAQF,EAAOO,aACzDjB,mBAAoBe,WAAWtH,IAAKkH,MAAMC,QAAQF,EAAOQ,cAE5D,KA5CC,EAAKhI,SAAS,EAAKhB,UA+CtB,EAjF4B,EAmF7BkJ,uBAAyB,WAEvB,EAAKlI,SAAS,CACZoG,UAAU,IAGZ,IAAI+B,EAAiB5H,IAAKkH,MAAMW,MAAM,EAAKxJ,MAAM6H,kBAC7C4B,GAAe,EAAKzJ,MAAM+H,mBAAqB,EAAK/H,MAAM0H,UAAY,EAAK1H,MAAM6H,kBAAkB6B,QAAQ,GAAK,QAEpHxH,QAAQC,IAAI,iBAAkBoH,GAC9BrH,QAAQC,IAAI,cAAesH,GAExB5I,OAAO4B,QAAQ,QAAUgH,EAAc,MACxC5I,OAAOqC,cAAcuF,QAAQkB,gBAAgBJ,GAAgBK,KAAK,CAACC,KAAMhJ,OAAOmB,gBAAgBM,MAAK,SAACwH,GACpG,EAAK1I,SAAS,CACZoG,UAAU,IAEZuC,MAAM,UACP,IAAEC,OAAM,SAACC,GACRF,MAAM,sBACN,EAAK3I,SAAS,CACZoG,UAAU,GAEb,GAEJ,EA5G4B,EA8G7B0C,2BAA6B,WAE3B,EAAK9I,SAAS,CACZoG,UAAU,IAGZ,IAAI+B,EAAiB5H,IAAKkH,MAAMW,MAAM,EAAKxJ,MAAM8H,kBAC7C2B,GAAe,EAAKzJ,MAAMiI,mBAAqB,EAAKjI,MAAM2H,cAAgB,EAAK3H,MAAM8H,kBAAkB4B,QAAQ,GAAK,QAExHxH,QAAQC,IAAI,iBAAkBoH,GAC9BrH,QAAQC,IAAI,cAAesH,GAExB5I,OAAO4B,QAAQ,QAAUgH,EAAc,MACxC5I,OAAOqC,cAAcuF,QAAQ0B,oBAAoBZ,GAAgBK,KAAK,CAACC,KAAMhJ,OAAOmB,gBAAgBM,MAAK,SAACwH,GACxG,EAAK1I,SAAS,CACZoG,UAAU,IAEZuC,MAAM,UACP,IAAEC,OAAM,SAACC,GACRF,MAAM,sBACN,EAAK3I,SAAS,CACZoG,UAAU,GAEb,GAEJ,EAvI4B,EAyI7B4C,kBAAoB,SAACC,EAAYC,GAC/B,EAAKlJ,SAAS,CACZmG,WAAY+C,GAEf,EA7I4B,EAiJ7BpG,OAAS,WACP,OACE,gCACA,sBAAKqG,UAAW,UAAhB,UACD,qBAAKA,UAAW,OAAQ/E,IAAK,6CAC9B,qDACA,wCAEA,qBAAKX,MAAO,CAAC2F,QAA6B,GAApB3J,OAAOX,WAAkD,GAA7B,EAAKF,MAAMyH,eAAwB,GAAG,QAAxF,SAGI,gCACE,mBAAG8C,UAAU,WAAb,wDACA,wDAA0B,mBAAG1H,KAAK,WAAR,0BAOhC,cAACoD,EAAA,EAAD,CAAKzB,GAAI,CAAEgG,QAAS,EAAKxK,MAAMwH,SAAS,OAAO,QAA/C,SACE,cAACiD,EAAA,EAAD,MAGF,qBAAK5F,MAAO,CAAC6F,UAAW,QAAxB,SACE,cAAC,EAAD,SAGJ,mBAAGC,GAAG,YACF,sBAAKJ,UAAW,eAAgB1F,MAAO,CAAC6F,UAAW,QAAnD,UACE,gDACA,oCAAO,EAAK1K,MAAM4H,eAAe8B,QAAQ,MACzC,uBAEA,4CACA,gCAAM,EAAK1J,MAAM0H,UAAjB,aAAsC,EAAK1H,MAAM+H,mBAAmB2B,QAAQ,GAA5E,WAAwF,EAAK1J,MAAMgI,mBAAmB0B,QAAQ,GAA9H,aAEA,uBAAO7E,MAAO,CAAC0B,QAAS,OAAQqE,SAAU,SAACC,GAAS,EAAKzJ,SAAS,CAACyG,iBAAkBgD,EAAIjI,OAAOkI,OAAQ,EAAEC,KAAK,WARjH,UAQmI,uBACjI,uBACA,gCAAM,EAAK/K,MAAM6H,iBAAjB,OAAuC,EAAK7H,MAAM+H,mBAAqB,EAAK/H,MAAM0H,UAAY,EAAK1H,MAAM6H,kBAAkB6B,QAAQ,GAAnI,YAAgJ,EAAK1J,MAAMgI,mBAAqB,EAAKhI,MAAM0H,UAAY,EAAK1H,MAAM6H,kBAAkB6B,QAAQ,GAA5O,aACA,yBAAQqB,KAAK,SAASlG,MAAO,CAAC0B,QAAS,MAAOyE,WAAW,MAAOzG,MAAO,SAAUK,QAAS,EAAK0E,uBAA/F,uBAAkI,EAAKtJ,MAAM+H,mBAAqB,EAAK/H,MAAM0H,UAAY,EAAK1H,MAAM6H,kBAAkB6B,QAAQ,GAA9N,WAEA,uBACA,uBACA,uBACA,uBAEA,gDACA,gCAAM,EAAK1J,MAAM2H,cAAjB,cAA2C,EAAK3H,MAAMiI,mBAAmByB,QAAQ,GAAjF,WAA6F,EAAK1J,MAAMkI,mBAAmBwB,QAAQ,GAAnI,aACA,uBAAO7E,MAAO,CAAC0B,QAAS,OAAQqE,SAAU,SAACC,GAAS,EAAKzJ,SAAS,CAAC0G,iBAAkB+C,EAAIjI,OAAOkI,OAAQ,EAAEC,KAAK,WApBjH,WAoBoI,uBAClI,uBACA,gCAAM,EAAK/K,MAAM8H,iBAAjB,OAAuC,EAAK9H,MAAMiI,mBAAqB,EAAKjI,MAAM2H,cAAgB,EAAK3H,MAAM8H,kBAAkB4B,QAAQ,GAAvI,YAAoJ,EAAK1J,MAAMkI,mBAAqB,EAAKlI,MAAM2H,cAAgB,EAAK3H,MAAM8H,kBAAkB4B,QAAQ,GAApP,aACA,yBAAQqB,KAAK,SAASlG,MAAO,CAAC0B,QAAS,MAAOyE,WAAW,MAAOzG,MAAO,SAAUK,QAAS,EAAKsF,2BAA/F,4BAA2I,EAAKlK,MAAMiI,mBAAqB,EAAKjI,MAAM2H,cAAgB,EAAK3H,MAAM8H,kBAAkB4B,QAAQ,GAA3O,gBAKL,EAvMC,EAAKtJ,UAAY,EAAKJ,MAHK,CAO5B,C,UA5BeyG,IAAMC,WCnDTuE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB7I,MAAK,YAAkD,IAA/C8I,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACT,GAEJ,E,kBCFKO,EAAYC,YAAY,CAC5BxE,QAAS,CACPyE,KAAM,QACN7F,QAAS,CACP8F,KAAM,WAERxE,UAAW,CACTwE,KAAM,WAERZ,WAAY,CACVa,QAAS,cAKfC,IAAS5H,OACP,cAAC,IAAM6H,WAAP,UACI,cAACC,EAAA,EAAD,CAAenF,MAAO4E,EAAtB,SACE,cAAC,EAAD,QAGN/I,SAASiB,eAAe,SAM1BsH,G","file":"static/js/main.3622cd1d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/walletconnect.1b22e784.png\";","export default __webpack_public_path__ + \"static/media/metamask.55d59196.png\";","export default __webpack_public_path__ + \"static/media/trustwallet.8de17c9e.png\";","import React from 'react';\r\nimport { Button, Box, Grid } from \"@mui/material\";\r\nimport Web3 from \"web3\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport {ContractContext} from '../assets/abi/contract';\r\nimport PowerIcon from '@mui/icons-material/Power';\r\nimport PowerOffIcon from '@mui/icons-material/PowerOff';\r\nimport { StringMappingType } from 'typescript';\r\n\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\n\r\nimport walletConnectLogo from \"../assets/img/walletconnect.png\";\r\nimport metamaskLogo from \"../assets/img/metamask.png\"\r\nimport trustwalletLogo from \"../assets/img/trustwallet.png\"\r\n\r\n\r\n\r\ninterface ConnectButtonProps {\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nclass ConnectButton extends React.Component<ConnectButtonProps> {\r\n \r\n  state = {\r\n    WalletConnectSelectionDlgOpen: false,\r\n    connected: false,\r\n    networkWarning: \"\"\r\n  }\r\n  baseState: any;\r\n  constructor(props: ConnectButtonProps) {\r\n      super(props);\r\n      this.baseState = this.state;\r\n  }\r\n\r\n  componentDidMount = () => { \r\n      //this.handleConnectWallet();\r\n      //this.handleConnectWallet_WalletConnect();\r\n      \r\n      try{\r\n        let existingConnectionJSON = localStorage.getItem(\"walletconnect\");\r\n        // walletconnect\r\n        if(existingConnectionJSON){\r\n          let existingConnection = false;\r\n          try{\r\n            let conn = JSON.parse(existingConnectionJSON);\r\n            existingConnection = conn.connected;\r\n          }catch{\r\n            existingConnection = false;\r\n          }\r\n          if(existingConnection){\r\n            this.initialConnect_WalletConnect(); // reuse created connection. no Modal will show\r\n          }\r\n        }else{\r\n          if(window.ethereum){\r\n            this.initialConnect(); // trust/metamask\r\n          }\r\n        }\r\n      }catch{ \r\n  \r\n      }\r\n  }\r\n\r\n  componentWillUnmount = () => { \r\n\r\n  }\r\n\r\n  componentWillReceiveProps(props: ConnectButtonProps) { \r\n\r\n\r\n  }\r\n\r\n  initialConnect_WalletConnect = async () => {\r\n\r\n    if(window.chainId > 0 && window.chainIdExpected != window.chainId){\r\n      this.setState({networkWarning: `network ${window.chainId} not supported.`});\r\n      return;\r\n    }else{\r\n      this.setState({networkWarning: ``});\r\n    }\r\n\r\n    //  Create WalletConnect Provider\r\n    window.walletConnectProvider = new WalletConnectProvider({\r\n      infuraId: \"042b9beb246dccdd1b2ced3804dfc2d9\", // Required\r\n      chainId: window.chainIdExpected, // \r\n      rpc: {\r\n        97: \"https://data-seed-prebsc-1-s1.binance.org:8545\", // bsc testnet\r\n        56: \"https://bsc-dataseed.binance.org/\" // bsc mainnet\r\n      }/*,\r\n      qrcodeModalOptions: {\r\n        mobileLinks: [\r\n          \"encrypted ink\"\r\n        ],\r\n        desktopLinks: [\r\n          \"encrypted ink\"\r\n        ]\r\n      }*/\r\n    });\r\n    //  Enable session (triggers QR Code modal)\r\n    try{\r\n\r\n      await window.walletConnectProvider.enable();    \r\n\r\n      window.web3 = new Web3(window.walletConnectProvider as any);\r\n\r\n      const accounts = await window.web3.eth.getAccounts();\r\n      if(accounts.length > 0) {\r\n        window.connected = true;\r\n        this.setState({connected: true});\r\n        window.walletAddress = accounts[0];\r\n        this.handleConnectWallet_WalletConnect();\r\n      }\r\n    }catch{\r\n      console.log(\"error on walletconnect\");\r\n    }\r\n\r\n  }\r\n\r\n  initialConnect = () => {\r\n    if (window.ethereum) {\r\n\r\n      if(window.chainId > 0 && window.chainIdExpected != window.chainId){\r\n        this.setState({networkWarning: `network ${window.chainId} not supported.`});\r\n        return;\r\n      }else{\r\n        this.setState({networkWarning: ``});\r\n      }\r\n\r\n      window.ethereum\r\n        .request({ method: \"eth_requestAccounts\" })\r\n        .then((res: string[]) => {\r\n          if (res.length >= 1) {\r\n            window.connected = true;\r\n            this.setState({connected: true});\r\n            window.walletAddress = res[0];\r\n            this.handleConnectWallet();\r\n          }\r\n        });\r\n    } else if (\r\n      window.confirm(\r\n        \"You have to use MetaMask or TrustWallet to connect. Press OK to continue to the MetaMask download page. https://metamask.io/download\"\r\n      )\r\n    ) {\r\n      let a = document.createElement(\"a\");\r\n      a.target = \"_blank\";\r\n      a.href = \"https://metamask.io/download\";\r\n      a.click();\r\n    }\r\n  }\r\n\r\n  handleConnectWallet = () => {\r\n\r\n    if(window.ethereum){\r\n      window.web3 = new Web3(window.ethereum);\r\n\r\n      window.chainId = window.ethereum.networkVersion;\r\n      if(window.chainId > 0 && window.chainIdExpected != window.chainId){\r\n        this.setState({networkWarning: `network ${window.chainId} not supported.`});\r\n      }else{\r\n        this.setState({networkWarning: ``});\r\n      }\r\n\r\n      window.ethereum.request({ method: \"eth_accounts\" }).then((res: any) => {\r\n        if (res.length >= 1) {\r\n          window.connected = true;\r\n          this.setState({connected: true});\r\n          window.walletAddress = res[0];\r\n          this.updateRefLink();\r\n          //console.log(\"eth_accounts\", res);\r\n          this.forceUpdate();\r\n\r\n          window.farm_contract = (new window.web3.eth.Contract(window.contract_abi, window.contractAddress) as unknown) as ContractContext;\r\n        }\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  handleConnectWallet_WalletConnect = async () => {\r\n\r\n    if(window.walletConnectProvider){\r\n      //window.web3 = new Web3(window.walletConnectProvider);\r\n      window.chainId = window.walletConnectProvider.chainId;\r\n      if(window.chainId > 0 && window.chainIdExpected != window.chainId){\r\n        this.setState({networkWarning: `network ${window.chainId} not supported.`});\r\n      }else{\r\n        this.setState({networkWarning: ``});\r\n      }\r\n\r\n      const accounts = await window.web3.eth.getAccounts();\r\n      if(accounts.length > 0) {\r\n        window.connected = true;\r\n        this.setState({connected: true});\r\n        window.walletAddress = accounts[0];\r\n        this.updateRefLink();\r\n        this.forceUpdate();\r\n\r\n        window.farm_contract = (new window.web3.eth.Contract(window.contract_abi, window.contractAddress) as unknown) as ContractContext;\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  handleDeactivateAccount = () => {\r\n    window.connected = false;\r\n    window.walletAddress = \"\";\r\n    this.setState({networkWarning: ``});\r\n    this.setState({connected: false});\r\n    this.forceUpdate();\r\n  }\r\n\r\n  handleDeactivateAccount_WalletConnect = () => {\r\n    window.walletConnectProvider.disconnect();\r\n    window.connected = false;\r\n    window.walletAddress = \"\";\r\n    window.chainId = 0;\r\n    localStorage.setItem(\"walletconnect\", \"\");\r\n    this.setState({networkWarning: ``});\r\n    this.setState({connected: false});\r\n    this.forceUpdate();\r\n  }\r\n\r\n  updateRefLink = () => {\r\n    let refLinkWalledId = document.getElementById(\"walletAddressRefLink\");\r\n    if(refLinkWalledId != null){\r\n      refLinkWalledId.innerText = window.walletAddress;\r\n    }\r\n  }\r\n\r\n  handleWalletConnectDlgSelection = (selection: string) => {\r\n    this.setState({\r\n      WalletConnectSelectionDlgOpen: false\r\n    });\r\n\r\n    switch(selection){\r\n      case \"metamask\":\r\n      case \"trustwallet\":\r\n        this.initialConnect();\r\n      break;\r\n\r\n      case \"walletconnect\":\r\n        this.initialConnect_WalletConnect();\r\n      break;\r\n    }\r\n  }\r\n\r\n  handleWalletConnectDlgClose = () => {\r\n    this.setState({\r\n      WalletConnectSelectionDlgOpen: false\r\n    });\r\n  }\r\n\r\n  onClick_connect = () => {\r\n\r\n    this.setState({\r\n      WalletConnectSelectionDlgOpen: true\r\n    });\r\n\r\n    //initialConnect_WalletConnect\r\n  }\r\n\r\n  onClick_disconnect = () => {\r\n    try{\r\n      this.handleDeactivateAccount_WalletConnect();\r\n    }catch{\r\n\r\n    }\r\n\r\n    try{\r\n      this.handleDeactivateAccount();\r\n    }catch{\r\n\r\n    }\r\n  }\r\n\r\n  render = () => {\r\n\r\n    let button;\r\n    if (this.state.connected) { \r\n      button = <Button fullWidth={true} variant={\"contained\"} color={\"secondary\"} sx={{my: 0, marginRight: 0 }} size=\"small\" onClick={this.onClick_disconnect}><PowerOffIcon style={{height: \"20px\", marginRight: \"8px\"}}></PowerOffIcon>disconnect</Button>;    \r\n    } else {\r\n      button = <Button fullWidth={true} variant={\"contained\"} color={\"primary\"} sx={{my: 0, marginRight: 0 }} size=\"small\" onClick={this.onClick_connect}><PowerIcon style={{height: \"20px\", marginRight: \"8px\"}}></PowerIcon>connect</Button>;  \r\n    }\r\n\r\n    let walletConnectPreSelectDlg =    <Dialog onClose={this.handleWalletConnectDlgClose} open={this.state.WalletConnectSelectionDlgOpen}>\r\n      <List sx={{ p: \"32px\" }}>\r\n        <ListItem autoFocus button onClick={() => this.handleWalletConnectDlgSelection('metamask')}>\r\n          <ListItemAvatar>\r\n              <img src={metamaskLogo} style={{width: \"40px\"}} />\r\n            </ListItemAvatar>\r\n          <ListItemText primaryTypographyProps={{fontSize: \"24pt\"}} primary=\"Metamask\" />\r\n        </ListItem>\r\n        <ListItem autoFocus button onClick={() => this.handleWalletConnectDlgSelection('trustwallet')}>\r\n            <ListItemAvatar>\r\n              <img src={trustwalletLogo} style={{width: \"40px\"}} />\r\n            </ListItemAvatar>\r\n          <ListItemText primaryTypographyProps={{fontSize: \"24pt\"}} primary=\"Trust Wallet\" />\r\n        </ListItem>\r\n        <ListItem autoFocus button onClick={() => this.handleWalletConnectDlgSelection('walletconnect')}>\r\n            <ListItemAvatar>\r\n              <img src={walletConnectLogo} style={{width: \"40px\"}} />\r\n            </ListItemAvatar>\r\n          <ListItemText primaryTypographyProps={{fontSize: \"24pt\"}} primary=\"WalletConnect\" />\r\n        </ListItem>\r\n      </List>\r\n    </Dialog>;\r\n\r\n    return (\r\n      <Box>\r\n        {this.state.networkWarning}\r\n        <Grid container>\r\n          <Grid item xs={12} md={12}>\r\n            {button}\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={12}>\r\n            <div style={{padding: \"16px\"}}>\r\n              {this.state.connected && window.walletAddress &&\r\n                `${window.walletAddress.slice(0, 6)}...${window.walletAddress.slice(\r\n                  window.walletAddress.length - 4,\r\n                  window.walletAddress.length\r\n                )}`}\r\n                \r\n            </div>\r\n          </Grid>\r\n\r\n          \r\n        </Grid>\r\n        {walletConnectPreSelectDlg}\r\n      </Box>\r\n      );\r\n    \r\n  }\r\n}\r\n\r\nexport default ConnectButton;","import React from 'react';\r\nimport './App.css';\r\n\r\nimport { styled } from '@mui/material/styles';\r\nimport { Button, CircularProgress, Grid, LinearProgress, Typography } from '@mui/material';\r\nimport { StandardTextFieldProps, TextField } from '@mui/material';\r\n\r\n\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport { AbiItem, TransactionReceipt } from 'ethereum-abi-types-generator';\r\n\r\nimport {ContractContext, GetApePairAmountsResponse, GetPcsPairAmountsResponse} from './assets/abi/contract';\r\nimport Web3 from \"web3\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport { formatEthFromWei, formatNumber } from './Formatters';\r\n\r\n//  Global setup Web3 Contract-Interaction\r\n//\r\nimport abi from \"./assets/abi/contract.json\";\r\nimport TopAppBar from './components/AppBar';\r\nimport ConnectButton from './components/ConnectButton';\r\n\r\n\r\n\r\nconst contractAddress: string = '0xbC5f824e70E557220FcE6d76eED81FEDBD3078b4'; // release on mainnet\r\n\r\n//window.chainIdExpected = 97;\r\nwindow.chainIdExpected = 56;\r\n\r\n\r\ndeclare global {\r\n  interface Window {\r\n    dataRefreshInterval: number,\r\n    farm_contract: ContractContext;\r\n    web3: Web3;\r\n    walletConnectProvider: WalletConnectProvider,\r\n    ethereum: any;\r\n    contractAddress: string;\r\n    contract_abi: AbiItem[];\r\n    walletAddress: string;\r\n    connected: boolean;\r\n    refferalAddress: string; // the ref address that invited me\r\n    chainId: number;\r\n    chainIdExpected: number;\r\n    bnbPrice: number;\r\n  }\r\n}\r\n\r\ninterface AppProps {\r\n  style?: React.CSSProperties;\r\n}\r\n\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.h3,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nwindow.dataRefreshInterval = 3000;\r\n\r\nclass App extends React.Component<AppProps> {\r\n  \r\n  state = {\r\n    radioValue: \"\",\r\n    progress: false,\r\n    walletAccepted: false,\r\n    LPApeswap: 0,\r\n    LPPancakeswap: 0,\r\n    PPPBalanceBUSD: 0,\r\n    ApeswapLPToSpend: 0,\r\n    PancakeLPToSpend: 0,\r\n\r\n    Apeswap_BUSD_Total: 0,\r\n    Apeswap_PSTN_Total: 0,\r\n    Pancake_BUSD_Total: 0,\r\n    Pancake_PSTN_Total: 0\r\n  }\r\n\r\n  baseState: any;\r\n  _stateInterval: any;\r\n\r\n  constructor(props: AppProps) {\r\n    super(props);\r\n\r\n    this.baseState = this.state;\r\n    // properties\r\n\r\n\r\n  }\r\n\r\n\r\n  componentDidMount = () => { \r\n    window.contractAddress = contractAddress;\r\n    window.contract_abi = abi as AbiItem[];\r\n\r\n\r\n    this.checkState();\r\n\r\n    if(this._stateInterval){\r\n      clearInterval(this._stateInterval);\r\n    }\r\n    this._stateInterval = setInterval(this.checkState, window.dataRefreshInterval);\r\n\r\n    //this.setModalOpen();\r\n  }\r\n\r\n\r\n  componentWillUnmount = () => { \r\n    \r\n  }\r\n\r\n  \r\n  checkState = () => {  \r\n\r\n    if(window.connected !== true){\r\n      this.setState(this.baseState);\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      yourAddress: window.walletAddress,\r\n    });\r\n\r\n\r\n    window.farm_contract.methods.getApePairBalance(window.contractAddress).call().then((result: string) => {\r\n      //console.log(result);\r\n      this.setState({\r\n        LPApeswap: Web3.utils.fromWei(result)\r\n      });\r\n    });\r\n\r\n    window.farm_contract.methods.getPcsPairBalance(window.contractAddress).call().then((result: string) => {\r\n      //console.log(result);\r\n      this.setState({\r\n        LPPancakeswap: Web3.utils.fromWei(result)\r\n      });\r\n    });\r\n\r\n    window.farm_contract.methods.getPPPBUSDBalance().call().then((result: string) => {\r\n      //console.log(result);\r\n      this.setState({\r\n        PPPBalanceBUSD: parseFloat(Web3.utils.fromWei(result))\r\n      });\r\n    });\r\n\r\n    window.farm_contract.methods.getApePairAmounts(window.contractAddress).call().then((result: GetApePairAmountsResponse) => {\r\n      //console.log(result);\r\n      this.setState({\r\n        Apeswap_BUSD_Total: parseFloat(Web3.utils.fromWei(result.amountBUSD)),\r\n        Apeswap_PSTN_Total: parseFloat(Web3.utils.fromWei(result.amountPSTN))\r\n      });\r\n    });\r\n\r\n    window.farm_contract.methods.getPcsPairAmounts(window.contractAddress).call().then((result: GetPcsPairAmountsResponse) => {\r\n      //console.log(result);\r\n      this.setState({\r\n        Pancake_BUSD_Total: parseFloat(Web3.utils.fromWei(result.amountBUSD)),\r\n        Pancake_PSTN_Total: parseFloat(Web3.utils.fromWei(result.amountPSTN))\r\n      });\r\n    });\r\n\r\n\r\n  }\r\n\r\n  onClick_FeedPPPApeswap = () => {\r\n    \r\n    this.setState({\r\n      progress: true\r\n    });\r\n\r\n    let lpToSpendInWei = Web3.utils.toWei(this.state.ApeswapLPToSpend);\r\n    let busdToSpend = (this.state.Apeswap_BUSD_Total / this.state.LPApeswap * this.state.ApeswapLPToSpend).toFixed(2) + \" BUSD\";\r\n\r\n    console.log(\"lpToSpendInWei\", lpToSpendInWei);\r\n    console.log(\"busdToSpend\", busdToSpend);\r\n\r\n    if(window.confirm(\"send \" + busdToSpend + \"?\")){\r\n      window.farm_contract.methods.feedPPP_Apeswap(lpToSpendInWei).send({from: window.walletAddress}).then((response) => {\r\n        this.setState({\r\n          progress: false\r\n        });\r\n        alert(\"success\");\r\n      }).catch((err:any) => {\r\n        alert(\"transaction failed\");\r\n        this.setState({\r\n          progress: false\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  onClick_FeedPPPPancakeswap = () => {\r\n\r\n    this.setState({\r\n      progress: true\r\n    });\r\n\r\n    let lpToSpendInWei = Web3.utils.toWei(this.state.PancakeLPToSpend);\r\n    let busdToSpend = (this.state.Pancake_BUSD_Total / this.state.LPPancakeswap * this.state.PancakeLPToSpend).toFixed(2) + \" BUSD\";\r\n\r\n    console.log(\"lpToSpendInWei\", lpToSpendInWei);\r\n    console.log(\"busdToSpend\", busdToSpend);\r\n\r\n    if(window.confirm(\"send \" + busdToSpend + \"?\")){\r\n      window.farm_contract.methods.feedPPP_Pancakeswap(lpToSpendInWei).send({from: window.walletAddress}).then((response) => {\r\n        this.setState({\r\n          progress: false\r\n        });\r\n        alert(\"success\");\r\n      }).catch((err:any) => {\r\n        alert(\"transaction failed\");\r\n        this.setState({\r\n          progress: false\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  handleRadioChange = (event: any, _value: string) => {\r\n    this.setState({\r\n      radioValue: _value\r\n    })\r\n  }\r\n\r\n  //  Main Layout\r\n  //\r\n  render = () => {\r\n    return (\r\n      <div>\r\n      <div className={\"wrapper\"}>\r\n     <img className={\"logo\"} src={\"https://piston-token.com/images/logo.svg\"}/>\r\n    <h2>PISTON PRICE PILLOW</h2>\r\n    <h3>Helper</h3>\r\n\r\n    <div style={{display:(window.connected == true && this.state.walletAccepted == true)?\"\":\"none\"}}>\r\n\r\n        \r\n        <div>\r\n          <p className=\"question\">Should we implement a variable tax system?</p>\r\n          <p>Please see the details <a href=\"#details\">here</a></p>\r\n\r\n          \r\n        </div>\r\n\r\n    </div>\r\n\r\n    <Box sx={{ display: this.state.progress?'flex':'none' }}>\r\n      <CircularProgress />\r\n    </Box>\r\n\r\n    <div style={{marginTop: \"24px\"}}>\r\n      <ConnectButton />\r\n    </div>\r\n  </div>\r\n  <a id=\"details\"></a>\r\n      <div className={\"wrapper left\"} style={{marginTop: \"16px\"}}>\r\n        <h3>Buffer Balance</h3>\r\n        <div>${this.state.PPPBalanceBUSD.toFixed(2)}</div>\r\n        <br/>\r\n\r\n        <h3>LP Apeswap</h3>\r\n        <div>{this.state.LPApeswap} APE-LP ( {this.state.Apeswap_BUSD_Total.toFixed(2)} BUSD / {this.state.Apeswap_PSTN_Total.toFixed(2)} PSTN )</div>\r\n\r\n        <input style={{padding: \"8px\"}} onChange={(evt) => {this.setState({ApeswapLPToSpend: evt.target.value})}} type=\"number\" /> APE-LP<br/>\r\n        <br/>\r\n        <div>{this.state.ApeswapLPToSpend} ( {(this.state.Apeswap_BUSD_Total / this.state.LPApeswap * this.state.ApeswapLPToSpend).toFixed(2)} BUSD / {(this.state.Apeswap_PSTN_Total / this.state.LPApeswap * this.state.ApeswapLPToSpend).toFixed(2)} PSTN )</div>\r\n        <button type='button' style={{padding: \"8px\", background:\"red\", color: \"white\"}} onClick={this.onClick_FeedPPPApeswap}>feed PPP {(this.state.Apeswap_BUSD_Total / this.state.LPApeswap * this.state.ApeswapLPToSpend).toFixed(2)} BUSD</button>\r\n\r\n        <br/>\r\n        <br/>\r\n        <hr></hr>\r\n        <br/>\r\n\r\n        <h3>LP Pancakeswap</h3>\r\n        <div>{this.state.LPPancakeswap} CAKE-LP ( {this.state.Pancake_BUSD_Total.toFixed(2)} BUSD / {this.state.Pancake_PSTN_Total.toFixed(2)} PSTN )</div>\r\n        <input style={{padding: \"8px\"}} onChange={(evt) => {this.setState({PancakeLPToSpend: evt.target.value})}} type=\"number\" /> CAKE-LP<br/>\r\n        <br/>\r\n        <div>{this.state.PancakeLPToSpend} ( {(this.state.Pancake_BUSD_Total / this.state.LPPancakeswap * this.state.PancakeLPToSpend).toFixed(2)} BUSD / {(this.state.Pancake_PSTN_Total / this.state.LPPancakeswap * this.state.PancakeLPToSpend).toFixed(2)} PSTN )</div>\r\n        <button type='button' style={{padding: \"8px\", background:\"red\", color: \"white\"}} onClick={this.onClick_FeedPPPPancakeswap}>feed PPP with {(this.state.Pancake_BUSD_Total / this.state.LPPancakeswap * this.state.PancakeLPToSpend).toFixed(2)} BUSD</button>\r\n      </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport amber from '@mui/material/colors/amber'\r\n\r\nimport { ThemeProvider, useTheme, createTheme } from '@mui/material/styles';\r\n\r\nconst darkTheme = createTheme({\r\n  palette: {\r\n    mode: 'light',\r\n    primary: {\r\n      main: '#FFFFFF',\r\n    },\r\n    secondary: {\r\n      main: '#193d7d',\r\n    },\r\n    background: {\r\n      default: \"#FFFFFF\"\r\n    }\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <ThemeProvider theme={darkTheme}>\r\n        <App />\r\n      </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}