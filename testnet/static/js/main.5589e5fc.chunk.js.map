{"version":3,"sources":["Formatters.tsx","assets/img/walletconnect.png","assets/img/metamask.png","assets/img/trustwallet.png","components/ConnectButton.tsx","components/AppBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["formatEthFromWei","value","pMaximumSignificantDigits","Web3","utils","fromWei","Intl","NumberFormat","maximumSignificantDigits","format","parseFloat","ConnectButton","props","state","WalletConnectSelectionDlgOpen","connected","networkWarning","baseState","nickname","componentDidMount","existingConnectionJSON","localStorage","getItem","existingConnection","JSON","parse","initialConnect_WalletConnect","window","ethereum","initialConnect","componentWillUnmount","a","chainId","chainIdExpected","setState","walletConnectProvider","WalletConnectProvider","infuraId","rpc","97","56","enable","web3","eth","getAccounts","accounts","length","walletAddress","handleConnectWallet_WalletConnect","console","log","request","method","then","res","handleConnectWallet","confirm","document","createElement","target","href","click","networkVersion","updateRefLink","forceUpdate","farm_contract","Contract","contract_abi","contractAddress","token_contract","token_contract_abi","tokenContractAddress","handleDeactivateAccount","handleDeactivateAccount_WalletConnect","disconnect","setItem","refLinkWalledId","getElementById","innerText","handleWalletConnectDlgSelection","selection","handleWalletConnectDlgClose","onClick_connect","onClick_disconnect","render","button","Button","fullWidth","variant","color","sx","my","marginRight","size","onClick","style","height","walletConnectPreSelectDlg","Dialog","onClose","open","List","p","ListItem","autoFocus","ListItemAvatar","src","metamaskLogo","width","ListItemText","primaryTypographyProps","fontSize","primary","trustwalletLogo","walletConnectLogo","Box","Grid","container","item","xs","md","slice","this","React","Component","HideOnScroll","children","trigger","useScrollTrigger","undefined","Slide","appear","direction","in","TopAppBar","className","CssBaseline","AppBar","position","background","border","boxShadow","Toolbar","minWidth","marginLeft","styled","Paper","theme","typography","h3","padding","spacing","textAlign","palette","text","secondary","dataRefreshInterval","App","balance","sponsorAddress","referralFromUrl","referredBy","myUpline","yourAddress","approveText","unwithdrawn","withdrawn","deposits","defaultSponsorAddress","amountInput","sponsorInput","approveInput","timeWindowBase","_stateInterval","_modalInterval","CountDownDate","Date","abi","abi_token","checkState","clearInterval","setInterval","onClick_Approve","current","Number","methods","approve","toWei","send","from","alert","refAddress","URLSearchParams","location","search","get","refferalAddress","balanceOf","call","result","catch","err","userInfo","myWithdrawn","payouts","myDeposits","upline","payoutOf","payout","setModalOpen","modalOpen","setModalClose","copyRefToClipboard","copy","onClick_Invest","ref","isAddress","getAddressToNickname","debug","deposit","response","onClick_Reinvest","roll","onClick_Withdraw","claim","flexGrow","margin","marginTop","id","display","justifyContent","alignItems","paddingTop","minHeight","TextField","inputRef","label","type","defaultValue","disabled","Typography","fontWeight","marginBottom","gutterBottom","onChange","event","inputProps","min","max","createRef","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","darkTheme","createTheme","mode","main","ReactDOM","StrictMode","ThemeProvider"],"mappings":"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","file":"static/js/main.5589e5fc.chunk.js","sourcesContent":["import Web3 from 'web3';\r\n\r\nexport function formatEthFromWei (value: string, pMaximumSignificantDigits: number = 4)  {\r\n    value = Web3.utils.fromWei(value);\r\n    return new Intl.NumberFormat('en-GB', {maximumSignificantDigits: pMaximumSignificantDigits}).format(parseFloat(value));\r\n    //return parseFloat(value).toFixed(5).toLocaleString();\r\n };\r\n\r\n export function formatNumber (value: any, pMaximumSignificantDigits: number = 4)  {\r\n    return new Intl.NumberFormat('en-GB', {maximumSignificantDigits: pMaximumSignificantDigits}).format(parseFloat(value));\r\n };\r\n \r\n export function formatWeiToUSD (value: string, digits: number = 4)  {\r\n    return (parseFloat(Web3.utils.fromWei(value)) * window.bnbPrice).toFixed(digits);\r\n };\r\n\r\n export function formatBnbToUSD (value: number | string, digits: number = 4)  {\r\n   return ((typeof(value) == \"string\"? parseFloat(value as string): value as number) * window.bnbPrice).toFixed(digits);\r\n};","export default __webpack_public_path__ + \"static/media/walletconnect.1b22e784.png\";","export default __webpack_public_path__ + \"static/media/metamask.55d59196.png\";","export default __webpack_public_path__ + \"static/media/trustwallet.8de17c9e.png\";","import React from 'react';\r\nimport { Button, Box, Grid } from \"@mui/material\";\r\nimport Web3 from \"web3\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport {ContractContext} from '../assets/abi/farm-contract';\r\nimport {ContractContext as TokenContractContext} from '../assets/abi/piston-contract';\r\nimport PowerIcon from '@mui/icons-material/Power';\r\nimport PowerOffIcon from '@mui/icons-material/PowerOff';\r\nimport { StringMappingType } from 'typescript';\r\n\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\n\r\nimport walletConnectLogo from \"../assets/img/walletconnect.png\";\r\nimport metamaskLogo from \"../assets/img/metamask.png\"\r\nimport trustwalletLogo from \"../assets/img/trustwallet.png\"\r\n\r\n\r\n\r\ninterface ConnectButtonProps {\r\n  style?: React.CSSProperties;\r\n  nickname?: string;\r\n}\r\n\r\nclass ConnectButton extends React.Component<ConnectButtonProps> {\r\n \r\n  state = {\r\n    WalletConnectSelectionDlgOpen: false,\r\n    connected: false,\r\n    networkWarning: \"\"\r\n  }\r\n  baseState: any;\r\n  nickname?: string;\r\n  constructor(props: ConnectButtonProps) {\r\n      super(props);\r\n      this.baseState = this.state;\r\n\r\n      this.nickname = props.nickname;\r\n  }\r\n\r\n  componentDidMount = () => { \r\n      //this.handleConnectWallet();\r\n      //this.handleConnectWallet_WalletConnect();\r\n      \r\n      try{\r\n        let existingConnectionJSON = localStorage.getItem(\"walletconnect\");\r\n        // walletconnect\r\n        if(existingConnectionJSON){\r\n          let existingConnection = false;\r\n          try{\r\n            let conn = JSON.parse(existingConnectionJSON);\r\n            existingConnection = conn.connected;\r\n          }catch{\r\n            existingConnection = false;\r\n          }\r\n          if(existingConnection){\r\n            this.initialConnect_WalletConnect(); // reuse created connection. no Modal will show\r\n          }\r\n        }else{\r\n          if(window.ethereum){\r\n            this.initialConnect(); // trust/metamask\r\n          }\r\n        }\r\n      }catch{ \r\n  \r\n      }\r\n  }\r\n\r\n  componentWillUnmount = () => { \r\n\r\n  }\r\n\r\n  componentWillReceiveProps(props: ConnectButtonProps) { \r\n\r\n    this.nickname = props.nickname;\r\n  }\r\n\r\n  initialConnect_WalletConnect = async () => {\r\n\r\n    if(window.chainId > 0 && window.chainIdExpected != window.chainId){\r\n      this.setState({networkWarning: `network ${window.chainId} not supported.`});\r\n      return;\r\n    }else{\r\n      this.setState({networkWarning: ``});\r\n    }\r\n\r\n    //  Create WalletConnect Provider\r\n    window.walletConnectProvider = new WalletConnectProvider({\r\n      infuraId: \"042b9beb246dccdd1b2ced3804dfc2d9\", // Required\r\n      chainId: window.chainIdExpected, // \r\n      rpc: {\r\n        97: \"https://data-seed-prebsc-1-s1.binance.org:8545\", // bsc testnet\r\n        56: \"https://bsc-dataseed.binance.org/\" // bsc mainnet\r\n      }/*,\r\n      qrcodeModalOptions: {\r\n        mobileLinks: [\r\n          \"encrypted ink\"\r\n        ],\r\n        desktopLinks: [\r\n          \"encrypted ink\"\r\n        ]\r\n      }*/\r\n    });\r\n    //  Enable session (triggers QR Code modal)\r\n    try{\r\n\r\n      await window.walletConnectProvider.enable();    \r\n\r\n      window.web3 = new Web3(window.walletConnectProvider as any);\r\n\r\n      const accounts = await window.web3.eth.getAccounts();\r\n      if(accounts.length > 0) {\r\n        window.connected = true;\r\n        this.setState({connected: true});\r\n        window.walletAddress = accounts[0];\r\n        this.handleConnectWallet_WalletConnect();\r\n      }\r\n    }catch{\r\n      console.log(\"error on walletconnect\");\r\n    }\r\n\r\n  }\r\n\r\n  initialConnect = () => {\r\n    if (window.ethereum) {\r\n\r\n      if(window.chainId > 0 && window.chainIdExpected != window.chainId){\r\n        this.setState({networkWarning: `network ${window.chainId} not supported.`});\r\n        return;\r\n      }else{\r\n        this.setState({networkWarning: ``});\r\n      }\r\n\r\n      window.ethereum\r\n        .request({ method: \"eth_requestAccounts\" })\r\n        .then((res: string[]) => {\r\n          if (res.length >= 1) {\r\n            window.connected = true;\r\n            this.setState({connected: true});\r\n            window.walletAddress = res[0];\r\n            this.handleConnectWallet();\r\n          }\r\n        });\r\n    } else if (\r\n      window.confirm(\r\n        \"You have to use MetaMask or TrustWallet to connect. Press OK to continue to the MetaMask download page. https://metamask.io/download\"\r\n      )\r\n    ) {\r\n      let a = document.createElement(\"a\");\r\n      a.target = \"_blank\";\r\n      a.href = \"https://metamask.io/download\";\r\n      a.click();\r\n    }\r\n  }\r\n\r\n  handleConnectWallet = () => {\r\n\r\n    if(window.ethereum){\r\n      window.web3 = new Web3(window.ethereum);\r\n\r\n      window.chainId = window.ethereum.networkVersion;\r\n      if(window.chainId > 0 && window.chainIdExpected != window.chainId){\r\n        this.setState({networkWarning: `network ${window.chainId} not supported.`});\r\n      }else{\r\n        this.setState({networkWarning: ``});\r\n      }\r\n\r\n      window.ethereum.request({ method: \"eth_accounts\" }).then((res: any) => {\r\n        if (res.length >= 1) {\r\n          window.connected = true;\r\n          this.setState({connected: true});\r\n          window.walletAddress = res[0];\r\n          this.updateRefLink();\r\n          //console.log(\"eth_accounts\", res);\r\n          this.forceUpdate();\r\n\r\n          window.farm_contract = (new window.web3.eth.Contract(window.contract_abi, window.contractAddress) as unknown) as ContractContext;\r\n          window.token_contract = (new window.web3.eth.Contract(window.token_contract_abi, window.tokenContractAddress) as unknown) as TokenContractContext;\r\n        }\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  handleConnectWallet_WalletConnect = async () => {\r\n\r\n    if(window.walletConnectProvider){\r\n      //window.web3 = new Web3(window.walletConnectProvider);\r\n      window.chainId = window.walletConnectProvider.chainId;\r\n      if(window.chainId > 0 && window.chainIdExpected != window.chainId){\r\n        this.setState({networkWarning: `network ${window.chainId} not supported.`});\r\n      }else{\r\n        this.setState({networkWarning: ``});\r\n      }\r\n\r\n      const accounts = await window.web3.eth.getAccounts();\r\n      if(accounts.length > 0) {\r\n        window.connected = true;\r\n        this.setState({connected: true});\r\n        window.walletAddress = accounts[0];\r\n        this.updateRefLink();\r\n        this.forceUpdate();\r\n\r\n        window.farm_contract = (new window.web3.eth.Contract(window.contract_abi, window.contractAddress) as unknown) as ContractContext;\r\n        window.token_contract = (new window.web3.eth.Contract(window.token_contract_abi, window.tokenContractAddress) as unknown) as TokenContractContext;\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  handleDeactivateAccount = () => {\r\n    window.connected = false;\r\n    window.walletAddress = \"\";\r\n    this.setState({networkWarning: ``});\r\n    this.setState({connected: false});\r\n    this.forceUpdate();\r\n  }\r\n\r\n  handleDeactivateAccount_WalletConnect = () => {\r\n    window.walletConnectProvider.disconnect();\r\n    window.connected = false;\r\n    window.walletAddress = \"\";\r\n    window.chainId = 0;\r\n    localStorage.setItem(\"walletconnect\", \"\");\r\n    this.setState({networkWarning: ``});\r\n    this.setState({connected: false});\r\n    this.forceUpdate();\r\n  }\r\n\r\n  updateRefLink = () => {\r\n    let refLinkWalledId = document.getElementById(\"walletAddressRefLink\");\r\n    if(refLinkWalledId != null){\r\n      refLinkWalledId.innerText = window.walletAddress;\r\n    }\r\n  }\r\n\r\n  handleWalletConnectDlgSelection = (selection: string) => {\r\n    this.setState({\r\n      WalletConnectSelectionDlgOpen: false\r\n    });\r\n\r\n    switch(selection){\r\n      case \"metamask\":\r\n      case \"trustwallet\":\r\n        this.initialConnect();\r\n      break;\r\n\r\n      case \"walletconnect\":\r\n        this.initialConnect_WalletConnect();\r\n      break;\r\n    }\r\n  }\r\n\r\n  handleWalletConnectDlgClose = () => {\r\n    this.setState({\r\n      WalletConnectSelectionDlgOpen: false\r\n    });\r\n  }\r\n\r\n  onClick_connect = () => {\r\n\r\n    this.setState({\r\n      WalletConnectSelectionDlgOpen: true\r\n    });\r\n\r\n    //initialConnect_WalletConnect\r\n  }\r\n\r\n  onClick_disconnect = () => {\r\n    try{\r\n      this.handleDeactivateAccount_WalletConnect();\r\n    }catch{\r\n\r\n    }\r\n\r\n    try{\r\n      this.handleDeactivateAccount();\r\n    }catch{\r\n\r\n    }\r\n  }\r\n\r\n  render = () => {\r\n\r\n    let button;\r\n    if (this.state.connected) { \r\n      button = <Button fullWidth={false} variant={\"contained\"} color={\"secondary\"} sx={{my: 0, marginRight: 0 }} size=\"small\" onClick={this.onClick_disconnect}><PowerOffIcon style={{height: \"20px\", marginRight: \"8px\"}}></PowerOffIcon>disconnect</Button>;    \r\n    } else {\r\n      button = <Button fullWidth={false} variant={\"contained\"} color={\"primary\"} sx={{my: 0, marginRight: 0 }} size=\"small\" onClick={this.onClick_connect}><PowerIcon style={{height: \"20px\", marginRight: \"8px\"}}></PowerIcon>connect</Button>;  \r\n    }\r\n\r\n    let walletConnectPreSelectDlg =    <Dialog onClose={this.handleWalletConnectDlgClose} open={this.state.WalletConnectSelectionDlgOpen}>\r\n      <List sx={{ p: \"32px\" }}>\r\n        <ListItem autoFocus button onClick={() => this.handleWalletConnectDlgSelection('metamask')}>\r\n          <ListItemAvatar>\r\n              <img src={metamaskLogo} style={{width: \"40px\"}} />\r\n            </ListItemAvatar>\r\n          <ListItemText primaryTypographyProps={{fontSize: \"24pt\"}} primary=\"Metamask\" />\r\n        </ListItem>\r\n        <ListItem autoFocus button onClick={() => this.handleWalletConnectDlgSelection('trustwallet')}>\r\n            <ListItemAvatar>\r\n              <img src={trustwalletLogo} style={{width: \"40px\"}} />\r\n            </ListItemAvatar>\r\n          <ListItemText primaryTypographyProps={{fontSize: \"24pt\"}} primary=\"Trust Wallet\" />\r\n        </ListItem>\r\n        <ListItem autoFocus button onClick={() => this.handleWalletConnectDlgSelection('walletconnect')}>\r\n            <ListItemAvatar>\r\n              <img src={walletConnectLogo} style={{width: \"40px\"}} />\r\n            </ListItemAvatar>\r\n          <ListItemText primaryTypographyProps={{fontSize: \"24pt\"}} primary=\"WalletConnect\" />\r\n        </ListItem>\r\n      </List>\r\n    </Dialog>;\r\n\r\n    return (\r\n      <Box>\r\n        {this.state.networkWarning}\r\n        <Grid container>\r\n          <Grid item xs={12} md={6}>\r\n            {button}\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <div>\r\n              {this.state.connected && window.walletAddress &&\r\n                `${window.walletAddress.slice(0, 6)}...${window.walletAddress.slice(\r\n                  window.walletAddress.length - 4,\r\n                  window.walletAddress.length\r\n                )}`}\r\n                {this.nickname && ` (${this.nickname})`}\r\n            </div>\r\n          </Grid>\r\n\r\n          \r\n        </Grid>\r\n        {walletConnectPreSelectDlg}\r\n      </Box>\r\n      );\r\n    \r\n  }\r\n}\r\n\r\nexport default ConnectButton;","import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ConnectButton from './ConnectButton';\r\nimport { Slide } from '@mui/material';\r\nimport useScrollTrigger from '@mui/material/useScrollTrigger';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\n\r\ninterface Props {\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    window?: () => Window;\r\n    children: React.ReactElement;\r\n  }\r\n\r\nfunction HideOnScroll(props: Props) {\r\n    const { children, window } = props;\r\n    // Note that you normally won't need to set the window ref as useScrollTrigger\r\n    // will default to window.\r\n    // This is only being set here because the demo is in an iframe.\r\n    const trigger = useScrollTrigger({\r\n      target: window ? window() : undefined,\r\n    });\r\n  \r\n    return (\r\n      <Slide appear={false} direction=\"down\" in={!trigger}>\r\n        {children}\r\n      </Slide>\r\n    );\r\n  }\r\n\r\ninterface AppBarProps {\r\n  style?: React.CSSProperties;\r\n  nickname: string;\r\n}\r\n\r\nexport default function TopAppBar(props: AppBarProps) {\r\n  return (\r\n    <Box className={\"\"} sx={{  }}>\r\n      <CssBaseline />\r\n      <HideOnScroll {...props}>\r\n      <AppBar position=\"fixed\" sx={{background: 'none', border: 'none', boxShadow: 'none'}}>\r\n        <Toolbar>\r\n\r\n          {/* <ConnectButton nickname={this.state.nickname} /> */}\r\n          <div style={{minWidth: \"300px\", marginLeft: 'auto', marginRight: \"16px\"}}>\r\n            <ConnectButton nickname={props.nickname} />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      </HideOnScroll>\r\n    </Box>\r\n  );\r\n}","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport { styled } from '@mui/material/styles';\r\nimport { Button, Grid, Typography } from '@mui/material';\r\nimport { StandardTextFieldProps, TextField } from '@mui/material';\r\n\r\n\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport { AbiItem, TransactionReceipt } from 'ethereum-abi-types-generator';\r\n\r\nimport ConnectButton from \"./components/ConnectButton\";\r\n\r\nimport diamondteamlogo from \"./assets/img/mydiamondteam-fire.png\";\r\nimport goku from \"./assets/img/v2/goku-with-font.png\";\r\nimport diamondteamlogo_header from \"./assets/img/header-blank.png\";\r\n\r\nimport {ContractContext, PayoutOfResponse, UserInfoResponse} from './assets/abi/farm-contract';\r\nimport {ContractContext as Token_ContractContext} from './assets/abi/piston-contract';\r\nimport Web3 from \"web3\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport copy from 'clipboard-copy';\r\nimport { formatBnbToUSD, formatEthFromWei, formatNumber, formatWeiToUSD } from './Formatters';\r\nimport {ReactComponent as TelegramIcon} from './assets/img/Telegram_logo.svg';\r\nimport {ReactComponent as BUSDIcon} from './assets/img/busd.svg';\r\nimport ShieldIcon from '@mui/icons-material/VerifiedUser';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\r\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\r\nimport AirdropPanel from './components/AirdropPanel';\r\nimport Countdown from \"react-countdown\";\r\n\r\nimport PaymentsIcon from '@mui/icons-material/Payments';\r\nimport LocalDrinkIcon from '@mui/icons-material/LocalDrink';\r\nimport OpacityIcon from '@mui/icons-material/Opacity';\r\nimport SavingsIcon from '@mui/icons-material/Savings';\r\nimport SpeedIcon from '@mui/icons-material/Speed';\r\nimport AirplanemodeActiveIcon from '@mui/icons-material/AirplanemodeActive';\r\n\r\n//\r\n//  Global setup Web3 Contract-Interaction\r\n//\r\nimport abi from \"./assets/abi/farm-contract.json\";\r\nimport abi_token from \"./assets/abi/piston-contract.json\";\r\nimport SettingsDlg from './components/SettingsDlg';\r\nimport TopAppBar from './components/AppBar';\r\nimport Calculator from './components/Calculator';\r\n\r\n\r\n\r\nconst contractAddress: string = '0x6D49FAe0F71f57193C901d55F5A2C4a706E8D31e'; // release on testnet\r\nconst tokenContractAddress: string = '0xa7fb4C2ACe237f0FbAeD33C92Cb1c34f66FDAF99'; // release on testnet\r\n\r\n\r\n//const contractAddress: string = '0x3AEDafF8FB09A4109Be8c10CF0c017d3f1F7DcDc'; // release on mainnet same address as testnet!\r\n\r\nwindow.chainIdExpected = 97;\r\n//window.chainIdExpected = 56;\r\n\r\n\r\n\r\ndeclare global {\r\n  interface Window {\r\n    dataRefreshInterval: number,\r\n    farm_contract: ContractContext;\r\n    token_contract: Token_ContractContext;\r\n    web3: Web3;\r\n    walletConnectProvider: WalletConnectProvider,\r\n    ethereum: any;\r\n    contractAddress: string;\r\n    tokenContractAddress: string;\r\n    contract_abi: AbiItem[]\r\n    token_contract_abi: AbiItem[]\r\n    airdropContract_abi: AbiItem[]\r\n    walletAddress: string;\r\n    connected: boolean;\r\n    refferalAddress: string; // the ref address that invited me\r\n    allowance: number;\r\n    chainId: number;\r\n    chainIdExpected: number;\r\n    bnbPrice: number;\r\n  }\r\n}\r\n\r\ninterface AppProps {\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.h3,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst modalStyle = {\r\n  position: 'absolute' as 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: \"70%\",\r\n  height: \"60%\",\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n  color: \"lightgrey\",\r\n  overflow: \"auto\",\r\n  opacity: 0.95,\r\n};\r\n\r\nwindow.dataRefreshInterval = 3000;\r\n\r\nclass App extends React.Component<AppProps> {\r\n  \r\n  state = {\r\n    balance: \"\",\r\n    sponsorAddress: \"\",   \r\n    referralFromUrl: \"\",    \r\n    referredBy: \"?\",\r\n    myUpline: \"\", // same like referreedBy but wallet address only. without text ...\r\n    yourAddress: \"?\",    \r\n    nickname: \"\",\r\n    approveText: \"approve\",\r\n\r\n    unwithdrawn: \"\",\r\n    withdrawn: \"\",\r\n    deposits: \"\",\r\n  }\r\n\r\n // private defaultSponsorAddress: string = \"0xb43aa594c3a40b6b788184925cd00f20b6f72ccf\";\r\n  private defaultSponsorAddress: string = \"0xfDC01397731d3280bBB5e2A136381297962C87d2\"; // testnet\r\n // private defaultSponsorAddress: string = \"0xfDC01397731d3280bBB5e2A136381297962C87d2\"; //mainnet\r\n\r\n  private amountInput: React.RefObject<HTMLInputElement>;\r\n  private sponsorInput: React.RefObject<StandardTextFieldProps>;\r\n  private approveInput: React.RefObject<StandardTextFieldProps>;\r\n\r\n  private timeWindowBase: number = 86400; // 86400 = 1 day; 3600 = 1 hour\r\n\r\n  baseState: any;\r\n  _stateInterval: any;\r\n\r\n  constructor(props: AppProps) {\r\n    super(props);\r\n\r\n    this.baseState = this.state;\r\n    // properties\r\n\r\n    this.amountInput = React.createRef();\r\n    this.sponsorInput = React.createRef();\r\n    this.approveInput = React.createRef();\r\n\r\n  }\r\n\r\n  private _modalInterval: any = null;\r\n  private CountDownDate: Date = new Date();\r\n\r\n  componentDidMount = () => { \r\n    window.contractAddress = contractAddress;\r\n    window.contract_abi = abi as AbiItem[];\r\n\r\n    window.tokenContractAddress = tokenContractAddress;\r\n    window.token_contract_abi = abi_token as AbiItem[];\r\n\r\n    //const urlParams = new URLSearchParams(window.location.search);\r\n    /*let unlock = urlParams.get('unlock');\r\n    if(unlock != \"true\"){\r\n      this._modalInterval = setInterval(this.handleModal, 1000);\r\n    }else{\r\n      this.state.countdownVisible = false;\r\n    } */   \r\n    \r\n\r\n    this.checkState();\r\n\r\n    if(this._stateInterval){\r\n      clearInterval(this._stateInterval);\r\n    }\r\n    this._stateInterval = setInterval(this.checkState, window.dataRefreshInterval);\r\n\r\n    //this.setModalOpen();\r\n  }\r\n\r\n  componentWillUnmount = () => { \r\n    \r\n  }\r\n\r\n  onClick_Approve = () => {\r\n\r\n    if( this.approveInput.current != null ){\r\n      if(new Number(this.approveInput.current.value as string) >= 0){\r\n        window.token_contract.methods.approve(window.contractAddress, /*max*/window.web3.utils.toWei(this.approveInput.current.value as string)).send({from: window.walletAddress});\r\n      }else{\r\n        alert(\"please set an amount to approve\");\r\n      }    \r\n    }\r\n  }\r\n\r\n  checkState = () => {  \r\n\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    let refAddress = urlParams.get('ref');\r\n    //\r\n    if(refAddress != null){\r\n\r\n      window.refferalAddress = refAddress;\r\n      if(this.state.myUpline == \"\" || this.state.myUpline == \"0x0000000000000000000000000000000000000000\"){\r\n        this.setState({\r\n          referralFromUrl: \"Referral bonus from your investment will go to \" + window.refferalAddress\r\n        });\r\n      }else{\r\n        this.setState({\r\n          referralFromUrl: \"\"\r\n        });\r\n      }\r\n      //console.log(\"refAddress\", window.refferalAddress);\r\n\r\n      if(this.sponsorInput.current != null){\r\n        //this.sponsorInput.current.value = refAddress // ref address in sponsor txt\r\n        this.setState({sponsorAddress: window.refferalAddress});\r\n      }\r\n\r\n    }  \r\n\r\n    if(window.connected !== true){\r\n      this.setState(this.baseState);\r\n      return;\r\n    }\r\n\r\n\r\n\r\n    this.setState({\r\n      yourAddress: window.walletAddress,\r\n    })\r\n\r\n    \r\n    window.token_contract.methods.balanceOf(window.walletAddress).call().then(result => {\r\n      this.setState({balance: result});\r\n    }).catch((err:any) => {\r\n      console.log(err);\r\n    });\r\n\r\n    window.farm_contract.methods.userInfo(window.walletAddress).call().then((result: UserInfoResponse) => {\r\n      let myWithdrawn = parseFloat(Web3.utils.fromWei(result.payouts));\r\n      let myDeposits = parseFloat(Web3.utils.fromWei(result.deposits));\r\n      \r\n      \r\n      this.setState({\r\n        withdrawn: myWithdrawn,\r\n        deposits: myDeposits,\r\n        referredBy: result.upline == \"0x0000000000000000000000000000000000000000\"? \"Will show after deposit\": result.upline,\r\n        myUpline: result.upline,\r\n      });\r\n    });\r\n\r\n    window.farm_contract.methods.payoutOf(window.walletAddress).call().then((result: PayoutOfResponse) => {\r\n      let unwithdrawn = parseFloat(Web3.utils.fromWei(result.payout));\r\n      this.setState({\r\n        unwithdrawn: unwithdrawn\r\n      });\r\n    });\r\n    \r\n  }\r\n\r\n\r\n  setModalOpen = () => {\r\n    this.setState({modalOpen: true});\r\n  }\r\n\r\n  setModalClose = () => {\r\n    clearInterval(this._modalInterval);\r\n    this._modalInterval = null;\r\n    this.setState({modalOpen: false});\r\n  }\r\n\r\n  copyRefToClipboard = () => {\r\n    let referralPart = (this.state.nickname)?this.state.nickname:window.walletAddress;\r\n    let refAddress = \"https://mydiamondteam.online/v2/\" + \"?ref=\" + referralPart;\r\n    copy(refAddress);\r\n  }\r\n\r\n\r\n  onClick_Invest = () => {\r\n    if(!this.amountInput.current || !this.sponsorInput.current){\r\n      return;\r\n    }\r\n    \r\n      let ref = window.refferalAddress;\r\n      if (!window.web3.utils.isAddress(ref)){\r\n        ref=this.sponsorInput.current.value as string;\r\n        //console.log(\"this.state.myUpline\", this.state.myUpline)\r\n        if(this.state.myUpline == \"\" || this.state.myUpline == \"0x0000000000000000000000000000000000000000\"){\r\n          if(ref.length > 0 && !window.web3.utils.isAddress(ref) ){\r\n            // no address, but value present --> check if its a valid nickname\r\n            window.farm_contract.methods.getAddressToNickname(ref).call().then((result: string) => {\r\n              console.log(\"checked nickname \", ref, \" and got address \", result);\r\n              if( result != \"0x0000000000000000000000000000000000000000\"){\r\n\r\n                // invest with nickname\r\n                if(!this.amountInput.current){\r\n                  return;\r\n                }\r\n                console.debug(\"invest with nickname \", ref, result);\r\n                window.farm_contract.methods.deposit( result, window.web3.utils.toWei(this.amountInput.current.value as string) )\r\n                  .send({ from:window.walletAddress}).then((response:any) => {\r\n              \r\n                  }).catch((err:any) => {\r\n                    alert(\"transaction failed\");\r\n                  }\r\n                );\r\n                /*\r\n                window.farm_contract.methods.depositWithNickname( ref )\r\n                  .send({ value: window.web3.utils.toWei(this.amountInput.current.value as string), from:window.walletAddress}).then((response:any) => {\r\n              \r\n                  }).catch((err:any) => {\r\n                    console.log(err);\r\n                    alert(\"transaction failed\");\r\n                  }\r\n                );*/\r\n\r\n              }else{\r\n                alert(\"Invalid Sponsor Address\");\r\n                return;\r\n              }\r\n            });  \r\n            \r\n            return; // exit here. async forward\r\n          }else if(ref.length == 0 ){\r\n            if(window.confirm(\"You cannot join without a sponsor. would you like to use the project's default sponsor to join?\") == true){\r\n\r\n                this.setState({sponsorAddress: this.defaultSponsorAddress});\r\n\r\n            }else{\r\n              return;\r\n            }\r\n          }else{\r\n            if(!window.web3.utils.isAddress(ref) || ref == window.walletAddress){\r\n              alert(\"Sponsor Addres not valid\");\r\n              return;\r\n            }\r\n          }\r\n        }else{\r\n          ref = this.state.myUpline; // wenn bereits upline vorhanden ist, dann immer diese verwenden. wird dann bei setUpline im contract sowieso ignoriert\r\n        }\r\n      }\r\n      if(ref.length == 0){\r\n        //ref = this.state.projectWallet;\r\n        ref = this.defaultSponsorAddress;\r\n        //console.log(\"Invest with Project Wallet as Sponsor.\");\r\n      }    \r\n\r\n      // invest with upline address\r\n      if(!this.amountInput.current){\r\n        return;\r\n      }\r\n\r\n      console.debug(\"invest with address \", ref);\r\n      window.farm_contract.methods.deposit( ref, window.web3.utils.toWei(this.amountInput.current.value as string) )\r\n        .send({ from:window.walletAddress}).then((response:any) => {\r\n    \r\n        }).catch((err:any) => {\r\n          alert(\"transaction failed\");\r\n        }\r\n      );\r\n  }\r\n\r\n  onClick_Reinvest = () => {\r\n    window.farm_contract.methods.roll().send({from: window.walletAddress/*, gasPrice: \"18000000000\"*/}).then((result: TransactionReceipt) => {\r\n      alert(\"Re-Invest Transaction Submitted.\")\r\n    }).catch((err:any) => {\r\n      alert(\"transaction failed\");\r\n    });\r\n  }\r\n\r\n  onClick_Withdraw = () => {\r\n    window.farm_contract.methods.claim().send({from: window.walletAddress/*, gasPrice: \"18000000000\"*/}).then((result: TransactionReceipt) => {\r\n      alert(\"Withdraw Transaction Submitted.\")\r\n    }).catch((err:any) => {\r\n      alert(\"transaction failed\");\r\n    });\r\n  }\r\n\r\n\r\n  //  Main Layout\r\n  //\r\n  render = () => {\r\n    return (\r\n      <Box sx={{ flexGrow: 1 }} style={{ width: \"90%\", margin: \"auto\", height: \"100%\", marginTop: \"32px\" }}>\r\n  <TopAppBar nickname={this.state.nickname}></TopAppBar>\r\n\r\n  <Grid id=\"mainApp\" container spacing={2} style={{marginTop: \"64px\"}}>\r\n    <Grid item xs={12} md={12}>\r\n      <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n        PISTON RACE - TESTNET\r\n      </div>\r\n    </Grid>\r\n    <Grid item xs={12} md={12}>\r\n      <Paper className={\"\"} style={{ padding: \"16px\", paddingTop: \"8px\", minHeight: \"306px\" }}>\r\n\r\n\r\n        <Grid container>\r\n          <Grid item xs={12} md={6}>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField sx={{my: 1}} inputRef={this.approveInput} label={\"amount\"} type=\"number\" defaultValue={50} fullWidth={false}></TextField>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <Button fullWidth={true} sx={{my: 1}} disabled={window.connected === false} size=\"large\" variant=\"contained\" onClick={this.onClick_Approve}>{this.state.approveText}</Button>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={6}>\r\n                  <Typography sx={{ fontWeight: \"bold\", fontSize: 24, marginTop: \"0\", marginBottom: \"16px\", textAlign: \"center\" }} color=\"#FFFFFF\" gutterBottom>\r\n                    Make a Deposit\r\n                  </Typography>\r\n                  <Typography variant=\"h2\" sx={{ display: (this.state.referredBy.length > 1 && this.state.referredBy != \"Will show after deposit\") ? \"none\" : \"block\" }}>\r\n                    <TextField\r\n                      inputRef={this.sponsorInput}\r\n                      value={this.state.sponsorAddress}\r\n                      onChange={(event) => this.setState({ sponsorAddress: event.target.value })}\r\n                      label={\"Your Sponsor\"}\r\n                      type=\"text\"\r\n                      fullWidth={true}\r\n                    ></TextField>\r\n                  </Typography>\r\n\r\n                  <Grid container>\r\n                    <Grid item xs={12} md={9} sx={{ p: 0 }}>\r\n                      <TextField inputRef={this.amountInput} inputProps={{ min: 10, max: 50000 }} defaultValue={10} label={\"Amount in PSTN\"} type=\"number\" fullWidth={true}></TextField>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3} sx={{ p: 0 }}>\r\n                      <Typography sx={{ fontSize: 12, textAlign: \"right\" }} color=\"text.secondary\" gutterBottom>\r\n                        Your Balance\r\n                      </Typography>\r\n                      <Typography sx={{ fontSize: 12, textAlign: \"right\" }} color=\"text.primary\" gutterBottom>\r\n                        {formatEthFromWei(this.state.balance, 4)} PSTN\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <br/>\r\n                  <a target=\"_blank\" href=\"https://pancake.kiemtienonline360.com/#/swap?outputCurrency=0xa7fb4C2ACe237f0FbAeD33C92Cb1c34f66FDAF99\">Buy Piston on PancakeSwap</a>\r\n                  <br/>\r\n                  <br/>\r\n\r\n                  <Button sx={{ my: 1 }} disabled={window.connected != true} size=\"small\" variant=\"contained\" onClick={this.onClick_Invest} fullWidth={true}>\r\n                    deposit\r\n                  </Button>\r\n                </Grid>\r\n\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n              <div>Deposits</div>\r\n              <div>{this.state.deposits}</div>\r\n              <br></br>\r\n              <div>Unwithdrawn</div>\r\n              <div>{this.state.unwithdrawn}</div>\r\n              <br/>\r\n              <div>Withdrawn</div>\r\n              <div>{this.state.withdrawn}</div>\r\n\r\n              <Button sx={{ my: 1 }} disabled={window.connected != true} size=\"small\" variant=\"contained\" onClick={this.onClick_Reinvest} fullWidth={true}>\r\n                    roll\r\n              </Button>\r\n              <Button sx={{ my: 1 }} disabled={window.connected != true} size=\"small\" variant=\"contained\" onClick={this.onClick_Withdraw} fullWidth={true}>\r\n                    withdraw\r\n              </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n\r\n  </Grid>\r\n\r\n</Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport amber from '@mui/material/colors/amber'\r\n\r\nimport { ThemeProvider, useTheme, createTheme } from '@mui/material/styles';\r\n\r\nconst darkTheme = createTheme({\r\n  palette: {\r\n    mode: 'dark',\r\n    primary: {\r\n      main: '#d76122',\r\n    },\r\n    secondary: {\r\n      main: '#fbd123',\r\n    }\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <ThemeProvider theme={darkTheme}>\r\n        <App />\r\n      </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}