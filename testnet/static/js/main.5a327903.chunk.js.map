{"version":3,"sources":["Formatters.tsx","components/AirdropPanel.tsx","assets/img/walletconnect.png","assets/img/metamask.png","assets/img/trustwallet.png","components/ConnectButton.tsx","components/AppBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["formatEthFromWei","value","pMaximumSignificantDigits","Web3","utils","fromWei","Intl","NumberFormat","maximumSignificantDigits","format","parseFloat","AirdropPanel","props","airdropAmountInput","airdropRecipientInput","teamAirdropRecipientInput","teamAirdropAmountInput","state","tabValue","balance","teamAirdropIncludeOwner","baseState","_stateInterval","componentDidMount","checkState","clearInterval","setInterval","window","dataRefreshInterval","componentWillUnmount","connected","setState","tabHandleChange","event","newValue","onClick_SendAirdrop","current","recipient","web3","isAddress","farm_contract","methods","airdrop","toWei","send","from","walletAddress","then","response","catch","err","console","log","length","getAddressToNickname","call","result","debug","alert","onChange_TeamAirdropIncludeOwner","target","checked","render","Paper","className","style","padding","Typography","sx","fontSize","color","gutterBottom","TextField","my","inputRef","label","type","fullWidth","defaultValue","Button","disabled","size","variant","onClick","textAlign","React","createRef","this","Component","ConnectButton","WalletConnectSelectionDlgOpen","networkWarning","nickname","existingConnectionJSON","localStorage","getItem","existingConnection","JSON","parse","initialConnect_WalletConnect","ethereum","initialConnect","a","chainId","chainIdExpected","walletConnectProvider","WalletConnectProvider","infuraId","rpc","97","56","enable","eth","getAccounts","accounts","handleConnectWallet_WalletConnect","request","method","res","handleConnectWallet","confirm","document","createElement","href","click","networkVersion","updateRefLink","forceUpdate","Contract","contract_abi","contractAddress","token_contract","token_contract_abi","tokenContractAddress","handleDeactivateAccount","handleDeactivateAccount_WalletConnect","disconnect","setItem","refLinkWalledId","getElementById","innerText","handleWalletConnectDlgSelection","selection","handleWalletConnectDlgClose","onClick_connect","onClick_disconnect","button","marginRight","height","walletConnectPreSelectDlg","Dialog","onClose","open","List","p","ListItem","autoFocus","ListItemAvatar","src","metamaskLogo","width","ListItemText","primaryTypographyProps","primary","trustwalletLogo","walletConnectLogo","Box","Grid","container","item","xs","md","slice","HideOnScroll","children","trigger","useScrollTrigger","undefined","Slide","appear","direction","in","TopAppBar","CssBaseline","AppBar","position","background","border","boxShadow","Toolbar","minWidth","marginLeft","styled","theme","typography","h3","spacing","palette","text","secondary","App","sponsorAddress","referralFromUrl","referredBy","myUpline","yourAddress","approveText","unwithdrawn","withdrawn","deposits","allowance","ref_bonus","maxPayout","playerinfo","netDeposits","myLastAirdropSent","myAirdrops","myAirdropsReceived","referral_team","upline_team","defaultSponsorAddress","amountInput","sponsorInput","approveInput","timeWindowBase","_modalInterval","CountDownDate","Date","abi","abi_token","onClick_Approve","Number","approve","refAddress","URLSearchParams","location","search","get","refferalAddress","balanceOf","userInfo","lastSent","last_airdrop","parseInt","toLocaleString","payouts","upline","match_bonus","maxPayoutOf","userInfoTotals","referrals","total_structure","airdrops_total","airdrops_received","creditsAndDebits","_credits","payoutOf","payout","setModalOpen","modalOpen","setModalClose","copyRefToClipboard","copy","onClick_Invest","ref","deposit","onClick_Reinvest","roll","onClick_Withdraw","claim","flexGrow","margin","marginTop","id","display","justifyContent","alignItems","paddingTop","minHeight","fontWeight","marginBottom","onChange","inputProps","min","max","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","darkTheme","createTheme","mode","main","ReactDOM","StrictMode","ThemeProvider"],"mappings":"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","file":"static/js/main.5a327903.chunk.js","sourcesContent":["import Web3 from 'web3';\r\n\r\nexport function formatEthFromWei (value: string, pMaximumSignificantDigits: number = 4)  {\r\n    value = Web3.utils.fromWei(value);\r\n    return new Intl.NumberFormat('en-GB', {maximumSignificantDigits: pMaximumSignificantDigits}).format(parseFloat(value));\r\n    //return parseFloat(value).toFixed(5).toLocaleString();\r\n };\r\n\r\n export function formatNumber (value: any, pMaximumSignificantDigits: number = 4)  {\r\n    return new Intl.NumberFormat('en-GB', {maximumSignificantDigits: pMaximumSignificantDigits}).format(parseFloat(value));\r\n };\r\n \r\n export function formatWeiToUSD (value: string, digits: number = 4)  {\r\n    return (parseFloat(Web3.utils.fromWei(value)) * window.bnbPrice).toFixed(digits);\r\n };\r\n\r\n export function formatBnbToUSD (value: number | string, digits: number = 4)  {\r\n   return ((typeof(value) == \"string\"? parseFloat(value as string): value as number) * window.bnbPrice).toFixed(digits);\r\n};","import React from 'react';\r\nimport { Button, FormControlLabel, StandardTextFieldProps, Switch, TextField } from '@mui/material';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport PropTypes from 'prop-types';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport { formatEthFromWei } from '../Formatters';\r\n\r\ninterface AirdropPanelProps {\r\n  style?: React.CSSProperties;\r\n  balance?: string;\r\n}\r\n\r\nfunction TabPanel(props: any) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <div>{children}</div>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nclass AirdropPanel extends React.Component<AirdropPanelProps> {\r\n\r\n  private airdropAmountInput: React.RefObject<StandardTextFieldProps>;\r\n  private airdropRecipientInput: React.RefObject<StandardTextFieldProps>;\r\n  private teamAirdropRecipientInput: React.RefObject<StandardTextFieldProps>;\r\n  private teamAirdropAmountInput: React.RefObject<StandardTextFieldProps>;\r\n\r\n  state = {\r\n    tabValue: 1,\r\n    balance: \"\",\r\n    teamAirdropIncludeOwner: false\r\n  }\r\n  baseState: any;\r\n  _stateInterval: any;\r\n  balance?: string;\r\n\r\n  constructor(props: AirdropPanelProps) {\r\n      super(props);\r\n\r\n      this.baseState = this.state;\r\n      this.airdropAmountInput = React.createRef();\r\n      this.airdropRecipientInput = React.createRef();\r\n      this.teamAirdropRecipientInput = React.createRef();\r\n      this.teamAirdropAmountInput = React.createRef();\r\n\r\n      // properties\r\n      this.balance = props.balance;\r\n  }\r\n\r\n  componentDidMount = () => { \r\n\r\n    this.checkState();\r\n    if(this._stateInterval){\r\n      clearInterval(this._stateInterval);\r\n    }\r\n    this._stateInterval = setInterval(this.checkState, window.dataRefreshInterval + (window.dataRefreshInterval / 100 * 30 /*40% slower*/));\r\n  }\r\n\r\n  componentWillUnmount = () => { \r\n\r\n\r\n  }\r\n\r\n  componentWillReceiveProps(props: AirdropPanelProps) {\r\n    this.balance = props.balance;\r\n    this.setState({balance: this.balance});\r\n  }\r\n\r\n  checkState = () => {  \r\n    if(window.connected !== true){\r\n      this.setState(this.baseState);\r\n      return;\r\n    }    \r\n\r\n  }  \r\n\r\n  tabHandleChange = (event: any, newValue: any) => {\r\n    this.setState({tabValue: newValue});\r\n  }\r\n\r\n  onClick_SendAirdrop = () => {\r\n    if(!this.airdropAmountInput.current || !this.airdropRecipientInput.current){\r\n      return;\r\n    }    \r\n    let recipient = this.airdropRecipientInput.current.value as string;\r\n\r\n    // send to address\r\n    if( window.web3.utils.isAddress(recipient)){\r\n      window.farm_contract.methods.airdrop( recipient, window.web3.utils.toWei(this.airdropAmountInput.current.value as string) )\r\n      .send({ from:window.walletAddress}).then((response:any) => {\r\n\r\n      }).catch((err:any) => {\r\n        console.log(err)\r\n      }); \r\n      return;\r\n    }\r\n\r\n    // send to address from nickname\r\n    if( !window.web3.utils.isAddress(recipient) && recipient.length > 0){\r\n      \r\n      window.farm_contract.methods.getAddressToNickname(recipient).call().then((result: string) => {\r\n        console.debug(\"checked nickname \", recipient, \" and got address \", result);\r\n        if( result != \"0x0000000000000000000000000000000000000000\"){\r\n          if(!this.airdropAmountInput.current){\r\n            return;\r\n          }    \r\n          window.farm_contract.methods.airdrop( result, window.web3.utils.toWei(this.airdropAmountInput.current.value as string) )\r\n          .send({ from:window.walletAddress}).then((response:any) => {\r\n      \r\n          }).catch((err:any) => {\r\n            console.log(err)\r\n          }); \r\n\r\n        }else{\r\n          alert(\"Invalid Sponsor Address\");\r\n        }\r\n      });  \r\n      \r\n      //alert(\"invalid recipient\");\r\n      return;\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  onChange_TeamAirdropIncludeOwner = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.state.teamAirdropIncludeOwner = event.target.checked;\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n      <Paper className={\"minHeight-small\"} style={{padding: \"16px\"}}>\r\n\r\n\r\n        <Typography sx={{ fontSize: 16 }} color=\"secondary\" gutterBottom>\r\n          Airdrop Panel:\r\n        </Typography>\r\n\r\n\r\n         <TextField sx={{my: 1}} inputRef={this.airdropRecipientInput} label={\"Recipient\"} type=\"text\" fullWidth={true}></TextField>\r\n\r\n         <TextField sx={{my: 1}} inputRef={this.airdropAmountInput} defaultValue={0.1} label={\"Amount in BNB\"} type=\"number\" fullWidth={true}></TextField>\r\n\r\n         <Button sx={{my: 1}} disabled={window.connected != true} size=\"large\" variant=\"contained\" onClick={this.onClick_SendAirdrop} fullWidth={true}>Send</Button>\r\n         <Typography sx={{ fontSize: 12, textAlign: \"right\" }} color=\"text.secondary\" gutterBottom>\r\n           Balance:\r\n         </Typography>\r\n         <Typography sx={{ fontSize: 12, textAlign: \"right\" }} color=\"text.primary\" gutterBottom>\r\n           {formatEthFromWei(this.state.balance, 6)} BNB\r\n         </Typography>\r\n\r\n\r\n\r\n     </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AirdropPanel;","export default __webpack_public_path__ + \"static/media/walletconnect.1b22e784.png\";","export default __webpack_public_path__ + \"static/media/metamask.55d59196.png\";","export default __webpack_public_path__ + \"static/media/trustwallet.8de17c9e.png\";","import React from 'react';\r\nimport { Button, Box, Grid } from \"@mui/material\";\r\nimport Web3 from \"web3\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport {ContractContext} from '../assets/abi/farm-contract';\r\nimport {ContractContext as TokenContractContext} from '../assets/abi/piston-contract';\r\nimport PowerIcon from '@mui/icons-material/Power';\r\nimport PowerOffIcon from '@mui/icons-material/PowerOff';\r\nimport { StringMappingType } from 'typescript';\r\n\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\n\r\nimport walletConnectLogo from \"../assets/img/walletconnect.png\";\r\nimport metamaskLogo from \"../assets/img/metamask.png\"\r\nimport trustwalletLogo from \"../assets/img/trustwallet.png\"\r\n\r\n\r\n\r\ninterface ConnectButtonProps {\r\n  style?: React.CSSProperties;\r\n  nickname?: string;\r\n}\r\n\r\nclass ConnectButton extends React.Component<ConnectButtonProps> {\r\n \r\n  state = {\r\n    WalletConnectSelectionDlgOpen: false,\r\n    connected: false,\r\n    networkWarning: \"\"\r\n  }\r\n  baseState: any;\r\n  nickname?: string;\r\n  constructor(props: ConnectButtonProps) {\r\n      super(props);\r\n      this.baseState = this.state;\r\n\r\n      this.nickname = props.nickname;\r\n  }\r\n\r\n  componentDidMount = () => { \r\n      //this.handleConnectWallet();\r\n      //this.handleConnectWallet_WalletConnect();\r\n      \r\n      try{\r\n        let existingConnectionJSON = localStorage.getItem(\"walletconnect\");\r\n        // walletconnect\r\n        if(existingConnectionJSON){\r\n          let existingConnection = false;\r\n          try{\r\n            let conn = JSON.parse(existingConnectionJSON);\r\n            existingConnection = conn.connected;\r\n          }catch{\r\n            existingConnection = false;\r\n          }\r\n          if(existingConnection){\r\n            this.initialConnect_WalletConnect(); // reuse created connection. no Modal will show\r\n          }\r\n        }else{\r\n          if(window.ethereum){\r\n            this.initialConnect(); // trust/metamask\r\n          }\r\n        }\r\n      }catch{ \r\n  \r\n      }\r\n  }\r\n\r\n  componentWillUnmount = () => { \r\n\r\n  }\r\n\r\n  componentWillReceiveProps(props: ConnectButtonProps) { \r\n\r\n    this.nickname = props.nickname;\r\n  }\r\n\r\n  initialConnect_WalletConnect = async () => {\r\n\r\n    if(window.chainId > 0 && window.chainIdExpected != window.chainId){\r\n      this.setState({networkWarning: `network ${window.chainId} not supported.`});\r\n      return;\r\n    }else{\r\n      this.setState({networkWarning: ``});\r\n    }\r\n\r\n    //  Create WalletConnect Provider\r\n    window.walletConnectProvider = new WalletConnectProvider({\r\n      infuraId: \"042b9beb246dccdd1b2ced3804dfc2d9\", // Required\r\n      chainId: window.chainIdExpected, // \r\n      rpc: {\r\n        97: \"https://data-seed-prebsc-1-s1.binance.org:8545\", // bsc testnet\r\n        56: \"https://bsc-dataseed.binance.org/\" // bsc mainnet\r\n      }/*,\r\n      qrcodeModalOptions: {\r\n        mobileLinks: [\r\n          \"encrypted ink\"\r\n        ],\r\n        desktopLinks: [\r\n          \"encrypted ink\"\r\n        ]\r\n      }*/\r\n    });\r\n    //  Enable session (triggers QR Code modal)\r\n    try{\r\n\r\n      await window.walletConnectProvider.enable();    \r\n\r\n      window.web3 = new Web3(window.walletConnectProvider as any);\r\n\r\n      const accounts = await window.web3.eth.getAccounts();\r\n      if(accounts.length > 0) {\r\n        window.connected = true;\r\n        this.setState({connected: true});\r\n        window.walletAddress = accounts[0];\r\n        this.handleConnectWallet_WalletConnect();\r\n      }\r\n    }catch{\r\n      console.log(\"error on walletconnect\");\r\n    }\r\n\r\n  }\r\n\r\n  initialConnect = () => {\r\n    if (window.ethereum) {\r\n\r\n      if(window.chainId > 0 && window.chainIdExpected != window.chainId){\r\n        this.setState({networkWarning: `network ${window.chainId} not supported.`});\r\n        return;\r\n      }else{\r\n        this.setState({networkWarning: ``});\r\n      }\r\n\r\n      window.ethereum\r\n        .request({ method: \"eth_requestAccounts\" })\r\n        .then((res: string[]) => {\r\n          if (res.length >= 1) {\r\n            window.connected = true;\r\n            this.setState({connected: true});\r\n            window.walletAddress = res[0];\r\n            this.handleConnectWallet();\r\n          }\r\n        });\r\n    } else if (\r\n      window.confirm(\r\n        \"You have to use MetaMask or TrustWallet to connect. Press OK to continue to the MetaMask download page. https://metamask.io/download\"\r\n      )\r\n    ) {\r\n      let a = document.createElement(\"a\");\r\n      a.target = \"_blank\";\r\n      a.href = \"https://metamask.io/download\";\r\n      a.click();\r\n    }\r\n  }\r\n\r\n  handleConnectWallet = () => {\r\n\r\n    if(window.ethereum){\r\n      window.web3 = new Web3(window.ethereum);\r\n\r\n      window.chainId = window.ethereum.networkVersion;\r\n      if(window.chainId > 0 && window.chainIdExpected != window.chainId){\r\n        this.setState({networkWarning: `network ${window.chainId} not supported.`});\r\n      }else{\r\n        this.setState({networkWarning: ``});\r\n      }\r\n\r\n      window.ethereum.request({ method: \"eth_accounts\" }).then((res: any) => {\r\n        if (res.length >= 1) {\r\n          window.connected = true;\r\n          this.setState({connected: true});\r\n          window.walletAddress = res[0];\r\n          this.updateRefLink();\r\n          //console.log(\"eth_accounts\", res);\r\n          this.forceUpdate();\r\n\r\n          window.farm_contract = (new window.web3.eth.Contract(window.contract_abi, window.contractAddress) as unknown) as ContractContext;\r\n          window.token_contract = (new window.web3.eth.Contract(window.token_contract_abi, window.tokenContractAddress) as unknown) as TokenContractContext;\r\n        }\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  handleConnectWallet_WalletConnect = async () => {\r\n\r\n    if(window.walletConnectProvider){\r\n      //window.web3 = new Web3(window.walletConnectProvider);\r\n      window.chainId = window.walletConnectProvider.chainId;\r\n      if(window.chainId > 0 && window.chainIdExpected != window.chainId){\r\n        this.setState({networkWarning: `network ${window.chainId} not supported.`});\r\n      }else{\r\n        this.setState({networkWarning: ``});\r\n      }\r\n\r\n      const accounts = await window.web3.eth.getAccounts();\r\n      if(accounts.length > 0) {\r\n        window.connected = true;\r\n        this.setState({connected: true});\r\n        window.walletAddress = accounts[0];\r\n        this.updateRefLink();\r\n        this.forceUpdate();\r\n\r\n        window.farm_contract = (new window.web3.eth.Contract(window.contract_abi, window.contractAddress) as unknown) as ContractContext;\r\n        window.token_contract = (new window.web3.eth.Contract(window.token_contract_abi, window.tokenContractAddress) as unknown) as TokenContractContext;\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  handleDeactivateAccount = () => {\r\n    window.connected = false;\r\n    window.walletAddress = \"\";\r\n    this.setState({networkWarning: ``});\r\n    this.setState({connected: false});\r\n    this.forceUpdate();\r\n  }\r\n\r\n  handleDeactivateAccount_WalletConnect = () => {\r\n    window.walletConnectProvider.disconnect();\r\n    window.connected = false;\r\n    window.walletAddress = \"\";\r\n    window.chainId = 0;\r\n    localStorage.setItem(\"walletconnect\", \"\");\r\n    this.setState({networkWarning: ``});\r\n    this.setState({connected: false});\r\n    this.forceUpdate();\r\n  }\r\n\r\n  updateRefLink = () => {\r\n    let refLinkWalledId = document.getElementById(\"walletAddressRefLink\");\r\n    if(refLinkWalledId != null){\r\n      refLinkWalledId.innerText = window.walletAddress;\r\n    }\r\n  }\r\n\r\n  handleWalletConnectDlgSelection = (selection: string) => {\r\n    this.setState({\r\n      WalletConnectSelectionDlgOpen: false\r\n    });\r\n\r\n    switch(selection){\r\n      case \"metamask\":\r\n      case \"trustwallet\":\r\n        this.initialConnect();\r\n      break;\r\n\r\n      case \"walletconnect\":\r\n        this.initialConnect_WalletConnect();\r\n      break;\r\n    }\r\n  }\r\n\r\n  handleWalletConnectDlgClose = () => {\r\n    this.setState({\r\n      WalletConnectSelectionDlgOpen: false\r\n    });\r\n  }\r\n\r\n  onClick_connect = () => {\r\n\r\n    this.setState({\r\n      WalletConnectSelectionDlgOpen: true\r\n    });\r\n\r\n    //initialConnect_WalletConnect\r\n  }\r\n\r\n  onClick_disconnect = () => {\r\n    try{\r\n      this.handleDeactivateAccount_WalletConnect();\r\n    }catch{\r\n\r\n    }\r\n\r\n    try{\r\n      this.handleDeactivateAccount();\r\n    }catch{\r\n\r\n    }\r\n  }\r\n\r\n  render = () => {\r\n\r\n    let button;\r\n    if (this.state.connected) { \r\n      button = <Button fullWidth={false} variant={\"contained\"} color={\"secondary\"} sx={{my: 0, marginRight: 0 }} size=\"small\" onClick={this.onClick_disconnect}><PowerOffIcon style={{height: \"20px\", marginRight: \"8px\"}}></PowerOffIcon>disconnect</Button>;    \r\n    } else {\r\n      button = <Button fullWidth={false} variant={\"contained\"} color={\"primary\"} sx={{my: 0, marginRight: 0 }} size=\"small\" onClick={this.onClick_connect}><PowerIcon style={{height: \"20px\", marginRight: \"8px\"}}></PowerIcon>connect</Button>;  \r\n    }\r\n\r\n    let walletConnectPreSelectDlg =    <Dialog onClose={this.handleWalletConnectDlgClose} open={this.state.WalletConnectSelectionDlgOpen}>\r\n      <List sx={{ p: \"32px\" }}>\r\n        <ListItem autoFocus button onClick={() => this.handleWalletConnectDlgSelection('metamask')}>\r\n          <ListItemAvatar>\r\n              <img src={metamaskLogo} style={{width: \"40px\"}} />\r\n            </ListItemAvatar>\r\n          <ListItemText primaryTypographyProps={{fontSize: \"24pt\"}} primary=\"Metamask\" />\r\n        </ListItem>\r\n        <ListItem autoFocus button onClick={() => this.handleWalletConnectDlgSelection('trustwallet')}>\r\n            <ListItemAvatar>\r\n              <img src={trustwalletLogo} style={{width: \"40px\"}} />\r\n            </ListItemAvatar>\r\n          <ListItemText primaryTypographyProps={{fontSize: \"24pt\"}} primary=\"Trust Wallet\" />\r\n        </ListItem>\r\n        <ListItem autoFocus button onClick={() => this.handleWalletConnectDlgSelection('walletconnect')}>\r\n            <ListItemAvatar>\r\n              <img src={walletConnectLogo} style={{width: \"40px\"}} />\r\n            </ListItemAvatar>\r\n          <ListItemText primaryTypographyProps={{fontSize: \"24pt\"}} primary=\"WalletConnect\" />\r\n        </ListItem>\r\n      </List>\r\n    </Dialog>;\r\n\r\n    return (\r\n      <Box>\r\n        {this.state.networkWarning}\r\n        <Grid container>\r\n          <Grid item xs={12} md={6}>\r\n            {button}\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <div>\r\n              {this.state.connected && window.walletAddress &&\r\n                `${window.walletAddress.slice(0, 6)}...${window.walletAddress.slice(\r\n                  window.walletAddress.length - 4,\r\n                  window.walletAddress.length\r\n                )}`}\r\n                {this.nickname && ` (${this.nickname})`}\r\n            </div>\r\n          </Grid>\r\n\r\n          \r\n        </Grid>\r\n        {walletConnectPreSelectDlg}\r\n      </Box>\r\n      );\r\n    \r\n  }\r\n}\r\n\r\nexport default ConnectButton;","import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ConnectButton from './ConnectButton';\r\nimport { Slide } from '@mui/material';\r\nimport useScrollTrigger from '@mui/material/useScrollTrigger';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\n\r\ninterface Props {\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    window?: () => Window;\r\n    children: React.ReactElement;\r\n  }\r\n\r\nfunction HideOnScroll(props: Props) {\r\n    const { children, window } = props;\r\n    // Note that you normally won't need to set the window ref as useScrollTrigger\r\n    // will default to window.\r\n    // This is only being set here because the demo is in an iframe.\r\n    const trigger = useScrollTrigger({\r\n      target: window ? window() : undefined,\r\n    });\r\n  \r\n    return (\r\n      <Slide appear={false} direction=\"down\" in={!trigger}>\r\n        {children}\r\n      </Slide>\r\n    );\r\n  }\r\n\r\ninterface AppBarProps {\r\n  style?: React.CSSProperties;\r\n  nickname: string;\r\n}\r\n\r\nexport default function TopAppBar(props: AppBarProps) {\r\n  return (\r\n    <Box className={\"\"} sx={{  }}>\r\n      <CssBaseline />\r\n      <HideOnScroll {...props}>\r\n      <AppBar position=\"fixed\" sx={{background: 'none', border: 'none', boxShadow: 'none'}}>\r\n        <Toolbar>\r\n\r\n          {/* <ConnectButton nickname={this.state.nickname} /> */}\r\n          <div style={{minWidth: \"300px\", marginLeft: 'auto', marginRight: \"16px\"}}>\r\n            <ConnectButton nickname={props.nickname} />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      </HideOnScroll>\r\n    </Box>\r\n  );\r\n}","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport { styled } from '@mui/material/styles';\r\nimport { Button, Grid, Typography } from '@mui/material';\r\nimport { StandardTextFieldProps, TextField } from '@mui/material';\r\n\r\n\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport { AbiItem, TransactionReceipt } from 'ethereum-abi-types-generator';\r\n\r\nimport ConnectButton from \"./components/ConnectButton\";\r\n\r\nimport diamondteamlogo from \"./assets/img/mydiamondteam-fire.png\";\r\nimport goku from \"./assets/img/v2/goku-with-font.png\";\r\nimport diamondteamlogo_header from \"./assets/img/header-blank.png\";\r\n\r\nimport {ContractContext, CreditsAndDebitsResponse, PayoutOfResponse, UserInfoResponse, UserInfoTotalsResponse} from './assets/abi/farm-contract';\r\nimport {ContractContext as Token_ContractContext} from './assets/abi/piston-contract';\r\nimport Web3 from \"web3\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport copy from 'clipboard-copy';\r\nimport { formatBnbToUSD, formatEthFromWei, formatNumber, formatWeiToUSD } from './Formatters';\r\nimport {ReactComponent as TelegramIcon} from './assets/img/Telegram_logo.svg';\r\nimport {ReactComponent as BUSDIcon} from './assets/img/busd.svg';\r\nimport ShieldIcon from '@mui/icons-material/VerifiedUser';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\r\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\r\nimport AirdropPanel from './components/AirdropPanel';\r\nimport Countdown from \"react-countdown\";\r\n\r\nimport PaymentsIcon from '@mui/icons-material/Payments';\r\nimport LocalDrinkIcon from '@mui/icons-material/LocalDrink';\r\nimport OpacityIcon from '@mui/icons-material/Opacity';\r\nimport SavingsIcon from '@mui/icons-material/Savings';\r\nimport SpeedIcon from '@mui/icons-material/Speed';\r\nimport AirplanemodeActiveIcon from '@mui/icons-material/AirplanemodeActive';\r\n\r\n//\r\n//  Global setup Web3 Contract-Interaction\r\n//\r\nimport abi from \"./assets/abi/farm-contract.json\";\r\nimport abi_token from \"./assets/abi/piston-contract.json\";\r\nimport SettingsDlg from './components/SettingsDlg';\r\nimport TopAppBar from './components/AppBar';\r\n\r\n\r\n\r\n\r\nconst contractAddress: string = '0xa930f5A3C7A55783e9074aCecceaE38F4f49bB56'; // release on testnet\r\nconst tokenContractAddress: string = '0xa7fb4C2ACe237f0FbAeD33C92Cb1c34f66FDAF99'; // release on testnet\r\n\r\n\r\n//const contractAddress: string = '0x3AEDafF8FB09A4109Be8c10CF0c017d3f1F7DcDc'; // release on mainnet same address as testnet!\r\n\r\nwindow.chainIdExpected = 97;\r\n//window.chainIdExpected = 56;\r\n\r\n\r\ndeclare global {\r\n  interface Window {\r\n    dataRefreshInterval: number,\r\n    farm_contract: ContractContext;\r\n    token_contract: Token_ContractContext;\r\n    web3: Web3;\r\n    walletConnectProvider: WalletConnectProvider,\r\n    ethereum: any;\r\n    contractAddress: string;\r\n    tokenContractAddress: string;\r\n    contract_abi: AbiItem[]\r\n    token_contract_abi: AbiItem[]\r\n    airdropContract_abi: AbiItem[]\r\n    walletAddress: string;\r\n    connected: boolean;\r\n    refferalAddress: string; // the ref address that invited me\r\n    chainId: number;\r\n    chainIdExpected: number;\r\n    bnbPrice: number;\r\n  }\r\n}\r\n\r\ninterface AppProps {\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.h3,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst modalStyle = {\r\n  position: 'absolute' as 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: \"70%\",\r\n  height: \"60%\",\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n  color: \"lightgrey\",\r\n  overflow: \"auto\",\r\n  opacity: 0.95,\r\n};\r\n\r\nwindow.dataRefreshInterval = 3000;\r\n\r\nclass App extends React.Component<AppProps> {\r\n  \r\n  state = {\r\n    balance: \"\",\r\n    sponsorAddress: \"\",   \r\n    referralFromUrl: \"\",    \r\n    referredBy: \"?\",\r\n    myUpline: \"\", // same like referreedBy but wallet address only. without text ...\r\n    yourAddress: \"?\",    \r\n    nickname: \"\",\r\n    approveText: \"approve\",\r\n\r\n    unwithdrawn: \"\",\r\n    withdrawn: \"\",\r\n    deposits: \"\",\r\n    allowance: \"\",\r\n    ref_bonus: \"\",\r\n    maxPayout: \"\",\r\n    playerinfo: \"\",\r\n    netDeposits: \"\",\r\n    myLastAirdropSent: \"\",\r\n    myAirdrops: \"\",\r\n    myAirdropsReceived: \"\",\r\n    referral_team: \"\",\r\n    upline_team: \"\"\r\n  }\r\n\r\n // private defaultSponsorAddress: string = \"0xb43aa594c3a40b6b788184925cd00f20b6f72ccf\";\r\n  private defaultSponsorAddress: string = \"0x4ff8C8741256d729A8cC7F1Cc02330F8103CCD28\"; // testnet\r\n // private defaultSponsorAddress: string = \"0xfDC01397731d3280bBB5e2A136381297962C87d2\"; //mainnet\r\n\r\n  private amountInput: React.RefObject<HTMLInputElement>;\r\n  private sponsorInput: React.RefObject<StandardTextFieldProps>;\r\n  private approveInput: React.RefObject<StandardTextFieldProps>;\r\n\r\n  private timeWindowBase: number = 86400; // 86400 = 1 day; 3600 = 1 hour\r\n\r\n  baseState: any;\r\n  _stateInterval: any;\r\n\r\n  constructor(props: AppProps) {\r\n    super(props);\r\n\r\n    this.baseState = this.state;\r\n    // properties\r\n\r\n    this.amountInput = React.createRef();\r\n    this.sponsorInput = React.createRef();\r\n    this.approveInput = React.createRef();\r\n\r\n  }\r\n\r\n  private _modalInterval: any = null;\r\n  private CountDownDate: Date = new Date();\r\n\r\n  componentDidMount = () => { \r\n    window.contractAddress = contractAddress;\r\n    window.contract_abi = abi as AbiItem[];\r\n\r\n    window.tokenContractAddress = tokenContractAddress;\r\n    window.token_contract_abi = abi_token as AbiItem[];\r\n\r\n\r\n\r\n    this.checkState();\r\n\r\n    if(this._stateInterval){\r\n      clearInterval(this._stateInterval);\r\n    }\r\n    this._stateInterval = setInterval(this.checkState, window.dataRefreshInterval);\r\n\r\n    //this.setModalOpen();\r\n  }\r\n\r\n  componentWillUnmount = () => { \r\n    \r\n  }\r\n\r\n  onClick_Approve = () => {\r\n\r\n    if( this.approveInput.current != null ){\r\n      if(new Number(this.approveInput.current.value as string) >= 0){\r\n        window.token_contract.methods.approve(window.contractAddress, /*max*/window.web3.utils.toWei(this.approveInput.current.value as string)).send({from: window.walletAddress});\r\n      }else{\r\n        alert(\"please set an amount to approve\");\r\n      }    \r\n    }\r\n  }\r\n\r\n  checkState = () => {  \r\n\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    let refAddress = urlParams.get('ref');\r\n    //\r\n    if(refAddress != null){\r\n\r\n      window.refferalAddress = refAddress;\r\n      if(this.state.myUpline == \"\" || this.state.myUpline == \"0x0000000000000000000000000000000000000000\"){\r\n        this.setState({\r\n          referralFromUrl: \"Referral bonus from your investment will go to \" + window.refferalAddress\r\n        });\r\n      }else{\r\n        this.setState({\r\n          referralFromUrl: \"\"\r\n        });\r\n      }\r\n      //console.log(\"refAddress\", window.refferalAddress);\r\n\r\n      if(this.sponsorInput.current != null){\r\n        //this.sponsorInput.current.value = refAddress // ref address in sponsor txt\r\n        this.setState({sponsorAddress: window.refferalAddress});\r\n      }\r\n\r\n    }  \r\n\r\n    if(window.connected !== true){\r\n      this.setState(this.baseState);\r\n      return;\r\n    }\r\n\r\n\r\n\r\n    this.setState({\r\n      yourAddress: window.walletAddress,\r\n    })\r\n\r\n    \r\n    window.token_contract.methods.balanceOf(window.walletAddress).call().then(result => {\r\n      this.setState({balance: result});\r\n\r\n      window.token_contract.methods.allowance(window.walletAddress, window.contractAddress).call().then(result => {\r\n        let allowance = window.web3.utils.fromWei(result);\r\n        if(new Number(allowance) > 0){\r\n          this.setState({\r\n            approveText: \"approved ✔\",\r\n            allowance: result\r\n          });\r\n        }\r\n      }).catch((err) => {\r\n        console.log(err)\r\n      });\r\n\r\n    }).catch((err:any) => {\r\n      console.log(err);\r\n    });\r\n\r\n    window.farm_contract.methods.userInfo(window.walletAddress).call().then((result: UserInfoResponse) => {\r\n\r\n      let lastSent = \"never\";\r\n      if( result.last_airdrop != \"0\"){\r\n        lastSent = new Date(parseInt(result.last_airdrop) * 1000 ).toLocaleString()\r\n      }\r\n\r\n      this.setState({\r\n        withdrawn: result.payouts,\r\n        deposits: result.deposits,\r\n        referredBy: result.upline == \"0x0000000000000000000000000000000000000000\"? \"Will show after deposit\": result.upline,\r\n        myUpline: result.upline,\r\n        ref_bonus: result.match_bonus,\r\n        myLastAirdropSent: lastSent\r\n\r\n      });\r\n\r\n      window.farm_contract.methods.maxPayoutOf(result.deposits).call().then((result) => {\r\n        this.setState({\r\n          maxPayout: result\r\n        })\r\n      });\r\n\r\n      window.farm_contract.methods.userInfoTotals(window.walletAddress).call().then((result: UserInfoTotalsResponse) => {\r\n        this.setState({\r\n          playerinfo: `${result.referrals}/${result.total_structure}`,\r\n          myAirdrops: result.airdrops_total,\r\n          myAirdropsReceived: result.airdrops_received\r\n        })\r\n      });\r\n\r\n      window.farm_contract.methods.creditsAndDebits(window.walletAddress).call().then((result: CreditsAndDebitsResponse) => {\r\n        this.setState({\r\n          netDeposits: result._credits\r\n        })\r\n      });\r\n\r\n\r\n    });\r\n\r\n    window.farm_contract.methods.payoutOf(window.walletAddress).call().then((result: PayoutOfResponse) => {\r\n      this.setState({\r\n        unwithdrawn: result.payout\r\n      });\r\n    });\r\n    \r\n  }\r\n\r\n\r\n  setModalOpen = () => {\r\n    this.setState({modalOpen: true});\r\n  }\r\n\r\n  setModalClose = () => {\r\n    clearInterval(this._modalInterval);\r\n    this._modalInterval = null;\r\n    this.setState({modalOpen: false});\r\n  }\r\n\r\n  copyRefToClipboard = () => {\r\n    let referralPart = (this.state.nickname)?this.state.nickname:window.walletAddress;\r\n    let refAddress = \"https://mydiamondteam.online/v2/\" + \"?ref=\" + referralPart;\r\n    copy(refAddress);\r\n  }\r\n\r\n\r\n  onClick_Invest = () => {\r\n    if(!this.amountInput.current || !this.sponsorInput.current){\r\n      return;\r\n    }\r\n    \r\n      let ref = window.refferalAddress;\r\n      if (!window.web3.utils.isAddress(ref)){\r\n        ref=this.sponsorInput.current.value as string;\r\n        //console.log(\"this.state.myUpline\", this.state.myUpline)\r\n        if(this.state.myUpline == \"\" || this.state.myUpline == \"0x0000000000000000000000000000000000000000\"){\r\n          if(ref.length > 0 && !window.web3.utils.isAddress(ref) ){\r\n            // no address, but value present --> check if its a valid nickname\r\n            window.farm_contract.methods.getAddressToNickname(ref).call().then((result: string) => {\r\n              console.log(\"checked nickname \", ref, \" and got address \", result);\r\n              if( result != \"0x0000000000000000000000000000000000000000\"){\r\n\r\n                // invest with nickname\r\n                if(!this.amountInput.current){\r\n                  return;\r\n                }\r\n                console.debug(\"invest with nickname \", ref, result);\r\n                window.farm_contract.methods.deposit( result, window.web3.utils.toWei(this.amountInput.current.value as string) )\r\n                  .send({ from:window.walletAddress}).then((response:any) => {\r\n              \r\n                  }).catch((err:any) => {\r\n                    alert(\"transaction failed\");\r\n                  }\r\n                );\r\n                /*\r\n                window.farm_contract.methods.depositWithNickname( ref )\r\n                  .send({ value: window.web3.utils.toWei(this.amountInput.current.value as string), from:window.walletAddress}).then((response:any) => {\r\n              \r\n                  }).catch((err:any) => {\r\n                    console.log(err);\r\n                    alert(\"transaction failed\");\r\n                  }\r\n                );*/\r\n\r\n              }else{\r\n                alert(\"Invalid Sponsor Address\");\r\n                return;\r\n              }\r\n            });  \r\n            \r\n            return; // exit here. async forward\r\n          }else if(ref.length == 0 ){\r\n            if(window.confirm(\"You cannot join without a sponsor. would you like to use the project's default sponsor to join?\") == true){\r\n\r\n                this.setState({sponsorAddress: this.defaultSponsorAddress});\r\n\r\n            }else{\r\n              return;\r\n            }\r\n          }else{\r\n            if(!window.web3.utils.isAddress(ref) || ref == window.walletAddress){\r\n              alert(\"Sponsor Addres not valid\");\r\n              return;\r\n            }\r\n          }\r\n        }else{\r\n          ref = this.state.myUpline; // wenn bereits upline vorhanden ist, dann immer diese verwenden. wird dann bei setUpline im contract sowieso ignoriert\r\n        }\r\n      }\r\n      if(ref.length == 0){\r\n        //ref = this.state.projectWallet;\r\n        ref = this.defaultSponsorAddress;\r\n        //console.log(\"Invest with Project Wallet as Sponsor.\");\r\n      }    \r\n\r\n      // invest with upline address\r\n      if(!this.amountInput.current){\r\n        return;\r\n      }\r\n\r\n      console.debug(\"invest with address \", ref);\r\n      window.farm_contract.methods.deposit( ref, window.web3.utils.toWei(this.amountInput.current.value as string) )\r\n        .send({ from:window.walletAddress}).then((response:any) => {\r\n    \r\n        }).catch((err:any) => {\r\n          alert(\"transaction failed\");\r\n        }\r\n      );\r\n  }\r\n\r\n  onClick_Reinvest = () => {\r\n    window.farm_contract.methods.roll().send({from: window.walletAddress/*, gasPrice: \"18000000000\"*/}).then((result: TransactionReceipt) => {\r\n      alert(\"Re-Invest Transaction Submitted.\")\r\n    }).catch((err:any) => {\r\n      alert(\"transaction failed\");\r\n    });\r\n  }\r\n\r\n  onClick_Withdraw = () => {\r\n    window.farm_contract.methods.claim().send({from: window.walletAddress/*, gasPrice: \"18000000000\"*/}).then((result: TransactionReceipt) => {\r\n      alert(\"Withdraw Transaction Submitted.\")\r\n    }).catch((err:any) => {\r\n      alert(\"transaction failed\");\r\n    });\r\n  }\r\n\r\n\r\n  //  Main Layout\r\n  //\r\n  render = () => {\r\n    return (\r\n      <Box sx={{ flexGrow: 1 }} style={{ width: \"90%\", margin: \"auto\", height: \"100%\", marginTop: \"32px\" }}>\r\n  <TopAppBar nickname={this.state.nickname}></TopAppBar>\r\n\r\n  <Grid id=\"mainApp\" container spacing={2} style={{marginTop: \"64px\"}}>\r\n    <Grid item xs={12} md={12}>\r\n      <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n        PISTON RACE - TESTNET - It's Better Than It Looks 😏\r\n      </div>\r\n    </Grid>\r\n    <Grid item xs={12} md={12}>\r\n      <Paper className={\"\"} style={{ padding: \"16px\", paddingTop: \"8px\", minHeight: \"306px\" }}>\r\n\r\n\r\n        <Grid container>\r\n          <Grid item xs={12} md={6}>\r\n            \r\n            <Grid item xs={12} md={6}>\r\n              <Typography sx={{ fontWeight: \"bold\", fontSize: 24, marginTop: \"0\", marginBottom: \"16px\", textAlign: \"center\" }} color=\"#FFFFFF\" gutterBottom>\r\n                    Approve\r\n              </Typography>\r\n              <Grid container>\r\n              <Grid item xs={12} md={9}>\r\n                <TextField inputRef={this.approveInput} label={\"amount\"} type=\"number\" defaultValue={50} fullWidth={true}></TextField>\r\n              </Grid>\r\n              <Grid item xs={12} md={3}>\r\n                <Typography sx={{ fontSize: 12, textAlign: \"right\" }} color=\"text.secondary\" gutterBottom>\r\n                  Approved Amount\r\n                </Typography>\r\n                <Typography sx={{ fontSize: 12, textAlign: \"right\" }} color=\"text.primary\" gutterBottom>\r\n                  {formatEthFromWei(this.state.allowance, 4)} PSTN\r\n                </Typography>\r\n              </Grid>\r\n\r\n                <Button fullWidth={true} sx={{my: 1}} disabled={window.connected === false} size=\"large\" variant=\"contained\" onClick={this.onClick_Approve}>{this.state.approveText}</Button>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={6}>\r\n                  <Typography sx={{ fontWeight: \"bold\", fontSize: 24, marginTop: \"0\", marginBottom: \"16px\", textAlign: \"center\" }} color=\"#FFFFFF\" gutterBottom>\r\n                    Make a Deposit\r\n                  </Typography>\r\n                  <Typography variant=\"h2\" sx={{ display: (this.state.referredBy.length > 1 && this.state.referredBy != \"Will show after deposit\") ? \"none\" : \"block\" }}>\r\n                    <TextField\r\n                      inputRef={this.sponsorInput}\r\n                      value={this.state.sponsorAddress}\r\n                      onChange={(event) => this.setState({ sponsorAddress: event.target.value })}\r\n                      label={\"Your Sponsor\"}\r\n                      type=\"text\"\r\n                      fullWidth={true}\r\n                    ></TextField>\r\n                  </Typography>\r\n\r\n                  <Grid container>\r\n                    <Grid item xs={12} md={9} sx={{ p: 0 }}>\r\n                      <TextField inputRef={this.amountInput} inputProps={{ min: 10, max: 50000 }} defaultValue={10} label={\"Amount in PSTN\"} type=\"number\" fullWidth={true}></TextField>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3} sx={{ p: 0 }}>\r\n                      <Typography sx={{ fontSize: 12, textAlign: \"right\" }} color=\"text.secondary\" gutterBottom>\r\n                        Your Balance\r\n                      </Typography>\r\n                      <Typography sx={{ fontSize: 12, textAlign: \"right\" }} color=\"text.primary\" gutterBottom>\r\n                        {formatEthFromWei(this.state.balance, 4)} PSTN\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <br/>\r\n                  <a target=\"_blank\" href=\"https://pancake.kiemtienonline360.com/#/swap?outputCurrency=0xa7fb4C2ACe237f0FbAeD33C92Cb1c34f66FDAF99\">Buy Piston on PancakeSwap</a>\r\n                  <br/>\r\n                  <br/>\r\n\r\n                  <Button sx={{ my: 1 }} disabled={window.connected != true} size=\"small\" variant=\"contained\" onClick={this.onClick_Invest} fullWidth={true}>\r\n                    deposit\r\n                  </Button>\r\n                </Grid>\r\n\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n              <div style={{color: \"gray\"}}>Deposits</div>\r\n              <div>{formatEthFromWei(this.state.deposits, 10)} PSTN</div>\r\n              <br></br>\r\n              <div style={{color: \"gray\"}}>Available</div>\r\n              <div>{formatEthFromWei(this.state.unwithdrawn, 10)} PSTN</div>\r\n              <br/>\r\n              <div style={{color: \"gray\"}}>Claimed</div>\r\n              <div>{formatEthFromWei(this.state.withdrawn, 10)} PSTN</div>\r\n              <br/>\r\n              <div style={{color: \"gray\"}}>Referral Rewards</div>\r\n              <div>{formatEthFromWei(this.state.ref_bonus, 10)} PSTN</div>\r\n              <br/>\r\n              <div style={{color: \"gray\"}}>Max Payout</div>\r\n              <div>{formatEthFromWei(this.state.maxPayout, 10)} PSTN</div>\r\n              <br/>\r\n              <div style={{color: \"gray\"}}>Team</div>\r\n              <div>{this.state.playerinfo}</div>\r\n              <br/>\r\n              <div style={{color: \"gray\"}}>Net Deposits</div>\r\n              <div>{formatEthFromWei(this.state.netDeposits, 10)} PSTN</div>\r\n\r\n              <Button sx={{ my: 1 }} disabled={window.connected != true} size=\"small\" variant=\"contained\" onClick={this.onClick_Reinvest} fullWidth={true}>\r\n                    roll (reinvest)\r\n              </Button>\r\n              <Button sx={{ my: 1 }} disabled={window.connected != true} size=\"small\" variant=\"contained\" onClick={this.onClick_Withdraw} fullWidth={true}>\r\n                    withdraw\r\n              </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n\r\n    <Grid item xs={12} md={3}>\r\n      <AirdropPanel balance={this.state.balance}></AirdropPanel>\r\n    </Grid>\r\n\r\n    \r\n    <Grid item xs={12} md={3}>\r\n      <Paper className={\"minHeight-small\"} style={{ padding: \"16px\" }}>\r\n        <Typography sx={{ fontSize: 16 }} color=\"secondary\" gutterBottom>\r\n          Airdrop Statistics:\r\n        </Typography>\r\n        <Typography sx={{ fontSize: 18 }} color=\"text.secondary\" gutterBottom>\r\n          Last Airdrop Sent:\r\n        </Typography>\r\n        <Typography sx={{ fontSize: 14, marginBottom: 2 }} color=\"text.primary\" gutterBottom>\r\n          {this.state.myLastAirdropSent}\r\n        </Typography>\r\n        <Typography sx={{ fontSize: 18 }} color=\"text.secondary\" gutterBottom>\r\n          Airdrops Sent:\r\n        </Typography>\r\n        <Typography sx={{ fontSize: 14, marginBottom: 2 }} color=\"text.primary\" gutterBottom>\r\n          {formatEthFromWei(this.state.myAirdrops, 8)} PSTN\r\n        </Typography>\r\n        \r\n        <Typography sx={{ fontSize: 18 }} color=\"text.secondary\" gutterBottom>\r\n         Airdrops Received:\r\n        </Typography>\r\n        <Typography sx={{ fontSize: 14, marginBottom: 2 }} color=\"text.primary\" gutterBottom>\r\n          {formatEthFromWei(this.state.myAirdropsReceived, 8)} PSTN\r\n        </Typography>\r\n\r\n      </Paper>\r\n    </Grid>\r\n\r\n\r\n  </Grid>\r\n\r\n</Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport amber from '@mui/material/colors/amber'\r\n\r\nimport { ThemeProvider, useTheme, createTheme } from '@mui/material/styles';\r\n\r\nconst darkTheme = createTheme({\r\n  palette: {\r\n    mode: 'dark',\r\n    primary: {\r\n      main: '#d76122',\r\n    },\r\n    secondary: {\r\n      main: '#fbd123',\r\n    }\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <ThemeProvider theme={darkTheme}>\r\n        <App />\r\n      </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}